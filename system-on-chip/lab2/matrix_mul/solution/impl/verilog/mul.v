// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mul,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.470000,HLS_SYN_LAT=117,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=30,HLS_SYN_FF=6332,HLS_SYN_LUT=2856,HLS_VERSION=2019_1}" *)

module mul (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_V_TDATA,
        a_V_TVALID,
        a_V_TREADY,
        b_V_TDATA,
        b_V_TVALID,
        b_V_TREADY,
        c_V_TDATA,
        c_V_TVALID,
        c_V_TREADY,
        n_TDATA,
        n_TVALID,
        n_TREADY
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 13'd2048;
parameter    ap_ST_fsm_state19 = 13'd4096;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] a_V_TDATA;
input   a_V_TVALID;
output   a_V_TREADY;
input  [31:0] b_V_TDATA;
input   b_V_TVALID;
output   b_V_TREADY;
output  [31:0] c_V_TDATA;
output   c_V_TVALID;
input   c_V_TREADY;
input  [31:0] n_TDATA;
input   n_TVALID;
output   n_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] a_V_0_data_out;
wire    a_V_0_vld_in;
wire    a_V_0_vld_out;
wire    a_V_0_ack_in;
reg    a_V_0_ack_out;
reg   [31:0] a_V_0_payload_A;
reg   [31:0] a_V_0_payload_B;
reg    a_V_0_sel_rd;
reg    a_V_0_sel_wr;
wire    a_V_0_sel;
wire    a_V_0_load_A;
wire    a_V_0_load_B;
reg   [1:0] a_V_0_state;
wire    a_V_0_state_cmp_full;
reg   [31:0] b_V_0_data_out;
wire    b_V_0_vld_in;
wire    b_V_0_vld_out;
wire    b_V_0_ack_in;
reg    b_V_0_ack_out;
reg   [31:0] b_V_0_payload_A;
reg   [31:0] b_V_0_payload_B;
reg    b_V_0_sel_rd;
reg    b_V_0_sel_wr;
wire    b_V_0_sel;
wire    b_V_0_load_A;
wire    b_V_0_load_B;
reg   [1:0] b_V_0_state;
wire    b_V_0_state_cmp_full;
reg   [31:0] c_V_1_data_out;
reg    c_V_1_vld_in;
wire    c_V_1_vld_out;
wire    c_V_1_ack_in;
wire    c_V_1_ack_out;
reg   [31:0] c_V_1_payload_A;
reg   [31:0] c_V_1_payload_B;
reg    c_V_1_sel_rd;
reg    c_V_1_sel_wr;
wire    c_V_1_sel;
wire    c_V_1_load_A;
wire    c_V_1_load_B;
reg   [1:0] c_V_1_state;
wire    c_V_1_state_cmp_full;
reg   [31:0] n_0_data_out;
wire    n_0_vld_in;
wire    n_0_vld_out;
wire    n_0_ack_in;
reg    n_0_ack_out;
reg   [31:0] n_0_payload_A;
reg   [31:0] n_0_payload_B;
reg    n_0_sel_rd;
reg    n_0_sel_wr;
wire    n_0_sel;
wire    n_0_load_A;
wire    n_0_load_B;
reg   [1:0] n_0_state;
wire    n_0_state_cmp_full;
reg    a_V_TDATA_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln20_fu_1489_p2;
wire   [0:0] icmp_ln22_fu_1505_p2;
reg    b_V_TDATA_blk_n;
reg    c_V_TDATA_blk_n;
reg    ap_enable_reg_pp1_iter5;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln30_reg_3151;
reg   [0:0] icmp_ln30_reg_3151_pp1_iter4_reg;
reg   [0:0] icmp_ln32_reg_3160;
reg   [0:0] icmp_ln32_reg_3160_pp1_iter4_reg;
reg    ap_enable_reg_pp1_iter6;
reg   [0:0] icmp_ln30_reg_3151_pp1_iter5_reg;
reg   [0:0] icmp_ln32_reg_3160_pp1_iter5_reg;
reg    n_TDATA_blk_n;
reg   [3:0] j2_0_reg_1400;
reg   [3:0] j2_0_reg_1400_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state13_pp1_stage0_iter1;
wire    ap_block_state14_pp1_stage0_iter2;
wire    ap_block_state15_pp1_stage0_iter3;
wire    ap_block_state16_pp1_stage0_iter4;
wire    ap_block_state17_pp1_stage0_iter5;
reg    ap_predicate_op537_write_state17;
reg    ap_block_state17_io;
wire    ap_block_state18_pp1_stage0_iter6;
reg    ap_predicate_op538_write_state18;
reg    ap_block_state18_io;
reg    ap_block_pp1_stage0_11001;
reg   [3:0] j2_0_reg_1400_pp1_iter2_reg;
reg   [31:0] n_read_reg_1858;
reg    ap_block_state1;
wire   [0:0] icmp_ln18_fu_1444_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] i_fu_1450_p2;
reg   [3:0] i_reg_1880;
wire   [0:0] icmp_ln19_fu_1460_p2;
reg   [3:0] a_cache_0_addr_reg_1889;
reg   [3:0] a_cache_1_addr_reg_1894;
reg   [3:0] a_cache_2_addr_reg_1899;
reg   [3:0] a_cache_3_addr_reg_1904;
reg   [3:0] a_cache_4_addr_reg_1909;
reg   [3:0] a_cache_5_addr_reg_1914;
reg   [3:0] a_cache_6_addr_reg_1919;
reg   [3:0] a_cache_7_addr_reg_1924;
reg   [3:0] a_cache_8_addr_reg_1929;
reg   [3:0] a_cache_9_addr_reg_1934;
reg   [3:0] b_cache_0_addr_reg_1939;
reg   [3:0] b_cache_1_addr_reg_1944;
reg   [3:0] b_cache_2_addr_reg_1949;
reg   [3:0] b_cache_3_addr_reg_1954;
reg   [3:0] b_cache_4_addr_reg_1959;
reg   [3:0] b_cache_5_addr_reg_1964;
reg   [3:0] b_cache_6_addr_reg_1969;
reg   [3:0] b_cache_7_addr_reg_1974;
reg   [3:0] b_cache_8_addr_reg_1979;
reg   [3:0] b_cache_9_addr_reg_1984;
wire   [3:0] j_fu_1495_p2;
reg    ap_predicate_op134_read_state3;
reg    ap_predicate_op135_read_state3;
reg    ap_block_state3;
wire   [31:0] b_cache_0_q0;
reg   [31:0] b_cache_0_load_reg_2100;
wire    ap_CS_fsm_state5;
wire   [31:0] b_cache_1_q0;
reg   [31:0] b_cache_1_load_reg_2105;
wire   [31:0] b_cache_2_q0;
reg   [31:0] b_cache_2_load_reg_2110;
wire   [31:0] b_cache_3_q0;
reg   [31:0] b_cache_3_load_reg_2115;
wire   [31:0] b_cache_4_q0;
reg   [31:0] b_cache_4_load_reg_2120;
wire   [31:0] b_cache_5_q0;
reg   [31:0] b_cache_5_load_reg_2125;
wire   [31:0] b_cache_6_q0;
reg   [31:0] b_cache_6_load_reg_2130;
wire   [31:0] b_cache_7_q0;
reg   [31:0] b_cache_7_load_reg_2135;
wire   [31:0] b_cache_8_q0;
reg   [31:0] b_cache_8_load_reg_2140;
wire   [31:0] b_cache_9_q0;
reg   [31:0] b_cache_9_load_reg_2145;
wire   [31:0] b_cache_0_q1;
reg   [31:0] b_cache_0_load_1_reg_2150;
wire   [31:0] b_cache_1_q1;
reg   [31:0] b_cache_1_load_1_reg_2155;
wire   [31:0] b_cache_2_q1;
reg   [31:0] b_cache_2_load_1_reg_2160;
wire   [31:0] b_cache_3_q1;
reg   [31:0] b_cache_3_load_1_reg_2165;
wire   [31:0] b_cache_4_q1;
reg   [31:0] b_cache_4_load_1_reg_2170;
wire   [31:0] b_cache_5_q1;
reg   [31:0] b_cache_5_load_1_reg_2175;
wire   [31:0] b_cache_6_q1;
reg   [31:0] b_cache_6_load_1_reg_2180;
wire   [31:0] b_cache_7_q1;
reg   [31:0] b_cache_7_load_1_reg_2185;
wire   [31:0] b_cache_8_q1;
reg   [31:0] b_cache_8_load_1_reg_2190;
wire   [31:0] b_cache_9_q1;
reg   [31:0] b_cache_9_load_1_reg_2195;
reg   [31:0] b_cache_0_load_2_reg_2300;
wire    ap_CS_fsm_state6;
reg   [31:0] b_cache_1_load_2_reg_2305;
reg   [31:0] b_cache_2_load_2_reg_2310;
reg   [31:0] b_cache_3_load_2_reg_2315;
reg   [31:0] b_cache_4_load_2_reg_2320;
reg   [31:0] b_cache_5_load_2_reg_2325;
reg   [31:0] b_cache_6_load_2_reg_2330;
reg   [31:0] b_cache_7_load_2_reg_2335;
reg   [31:0] b_cache_8_load_2_reg_2340;
reg   [31:0] b_cache_9_load_2_reg_2345;
reg   [31:0] b_cache_0_load_3_reg_2350;
reg   [31:0] b_cache_1_load_3_reg_2355;
reg   [31:0] b_cache_2_load_3_reg_2360;
reg   [31:0] b_cache_3_load_3_reg_2365;
reg   [31:0] b_cache_4_load_3_reg_2370;
reg   [31:0] b_cache_5_load_3_reg_2375;
reg   [31:0] b_cache_6_load_3_reg_2380;
reg   [31:0] b_cache_7_load_3_reg_2385;
reg   [31:0] b_cache_8_load_3_reg_2390;
reg   [31:0] b_cache_9_load_3_reg_2395;
reg   [31:0] b_cache_0_load_4_reg_2500;
wire    ap_CS_fsm_state7;
reg   [31:0] b_cache_1_load_4_reg_2505;
reg   [31:0] b_cache_2_load_4_reg_2510;
reg   [31:0] b_cache_3_load_4_reg_2515;
reg   [31:0] b_cache_4_load_4_reg_2520;
reg   [31:0] b_cache_5_load_4_reg_2525;
reg   [31:0] b_cache_6_load_4_reg_2530;
reg   [31:0] b_cache_7_load_4_reg_2535;
reg   [31:0] b_cache_8_load_4_reg_2540;
reg   [31:0] b_cache_9_load_4_reg_2545;
reg   [31:0] b_cache_0_load_5_reg_2550;
reg   [31:0] b_cache_1_load_5_reg_2555;
reg   [31:0] b_cache_2_load_5_reg_2560;
reg   [31:0] b_cache_3_load_5_reg_2565;
reg   [31:0] b_cache_4_load_5_reg_2570;
reg   [31:0] b_cache_5_load_5_reg_2575;
reg   [31:0] b_cache_6_load_5_reg_2580;
reg   [31:0] b_cache_7_load_5_reg_2585;
reg   [31:0] b_cache_8_load_5_reg_2590;
reg   [31:0] b_cache_9_load_5_reg_2595;
reg   [31:0] b_cache_0_load_6_reg_2700;
wire    ap_CS_fsm_state8;
reg   [31:0] b_cache_1_load_6_reg_2705;
reg   [31:0] b_cache_2_load_6_reg_2710;
reg   [31:0] b_cache_3_load_6_reg_2715;
reg   [31:0] b_cache_4_load_6_reg_2720;
reg   [31:0] b_cache_5_load_6_reg_2725;
reg   [31:0] b_cache_6_load_6_reg_2730;
reg   [31:0] b_cache_7_load_6_reg_2735;
reg   [31:0] b_cache_8_load_6_reg_2740;
reg   [31:0] b_cache_9_load_6_reg_2745;
reg   [31:0] b_cache_0_load_7_reg_2750;
reg   [31:0] b_cache_1_load_7_reg_2755;
reg   [31:0] b_cache_2_load_7_reg_2760;
reg   [31:0] b_cache_3_load_7_reg_2765;
reg   [31:0] b_cache_4_load_7_reg_2770;
reg   [31:0] b_cache_5_load_7_reg_2775;
reg   [31:0] b_cache_6_load_7_reg_2780;
reg   [31:0] b_cache_7_load_7_reg_2785;
reg   [31:0] b_cache_8_load_7_reg_2790;
reg   [31:0] b_cache_9_load_7_reg_2795;
wire   [0:0] icmp_ln37_fu_1510_p2;
reg   [0:0] icmp_ln37_reg_2900;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln37_1_fu_1515_p2;
reg   [0:0] icmp_ln37_1_reg_2904;
wire   [0:0] icmp_ln37_2_fu_1520_p2;
reg   [0:0] icmp_ln37_2_reg_2908;
wire   [0:0] icmp_ln37_3_fu_1525_p2;
reg   [0:0] icmp_ln37_3_reg_2912;
wire   [0:0] icmp_ln37_4_fu_1530_p2;
reg   [0:0] icmp_ln37_4_reg_2916;
wire   [0:0] icmp_ln37_5_fu_1535_p2;
reg   [0:0] icmp_ln37_5_reg_2920;
wire   [0:0] icmp_ln37_6_fu_1540_p2;
reg   [0:0] icmp_ln37_6_reg_2924;
wire   [0:0] icmp_ln37_7_fu_1545_p2;
reg   [0:0] icmp_ln37_7_reg_2928;
wire   [0:0] icmp_ln37_8_fu_1550_p2;
reg   [0:0] icmp_ln37_8_reg_2932;
wire   [0:0] icmp_ln37_9_fu_1555_p2;
reg   [0:0] icmp_ln37_9_reg_2936;
reg   [31:0] b_cache_0_load_8_reg_2940;
reg   [31:0] b_cache_1_load_8_reg_2945;
reg   [31:0] b_cache_2_load_8_reg_2950;
reg   [31:0] b_cache_3_load_8_reg_2955;
reg   [31:0] b_cache_4_load_8_reg_2960;
reg   [31:0] b_cache_5_load_8_reg_2965;
reg   [31:0] b_cache_6_load_8_reg_2970;
reg   [31:0] b_cache_7_load_8_reg_2975;
reg   [31:0] b_cache_8_load_8_reg_2980;
reg   [31:0] b_cache_9_load_8_reg_2985;
reg   [31:0] b_cache_0_load_9_reg_2990;
reg   [31:0] b_cache_1_load_9_reg_2995;
reg   [31:0] b_cache_2_load_9_reg_3000;
reg   [31:0] b_cache_3_load_9_reg_3005;
reg   [31:0] b_cache_4_load_9_reg_3010;
reg   [31:0] b_cache_5_load_9_reg_3015;
reg   [31:0] b_cache_6_load_9_reg_3020;
reg   [31:0] b_cache_7_load_9_reg_3025;
reg   [31:0] b_cache_8_load_9_reg_3030;
reg   [31:0] b_cache_9_load_9_reg_3035;
wire   [3:0] i_1_fu_1566_p2;
reg   [3:0] i_1_reg_3043;
wire    ap_CS_fsm_state10;
reg    ap_block_state10;
wire   [0:0] icmp_ln28_fu_1560_p2;
wire   [0:0] icmp_ln29_fu_1576_p2;
wire   [31:0] a_cache_0_q0;
reg  signed [31:0] a_cache_0_load_reg_3101;
wire    ap_CS_fsm_state11;
wire   [31:0] a_cache_1_q0;
reg  signed [31:0] a_cache_1_load_reg_3106;
wire   [31:0] a_cache_2_q0;
reg  signed [31:0] a_cache_2_load_reg_3111;
wire   [31:0] a_cache_3_q0;
reg  signed [31:0] a_cache_3_load_reg_3116;
wire   [31:0] a_cache_4_q0;
reg  signed [31:0] a_cache_4_load_reg_3121;
wire   [31:0] a_cache_5_q0;
reg  signed [31:0] a_cache_5_load_reg_3126;
wire   [31:0] a_cache_6_q0;
reg  signed [31:0] a_cache_6_load_reg_3131;
wire   [31:0] a_cache_7_q0;
reg  signed [31:0] a_cache_7_load_reg_3136;
wire   [31:0] a_cache_8_q0;
reg  signed [31:0] a_cache_8_load_reg_3141;
wire   [31:0] a_cache_9_q0;
reg  signed [31:0] a_cache_9_load_reg_3146;
wire   [0:0] icmp_ln30_fu_1595_p2;
reg   [0:0] icmp_ln30_reg_3151_pp1_iter1_reg;
reg   [0:0] icmp_ln30_reg_3151_pp1_iter2_reg;
reg   [0:0] icmp_ln30_reg_3151_pp1_iter3_reg;
wire   [3:0] j_1_fu_1601_p2;
reg   [3:0] j_1_reg_3155;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln32_fu_1611_p2;
reg   [0:0] icmp_ln32_reg_3160_pp1_iter1_reg;
reg   [0:0] icmp_ln32_reg_3160_pp1_iter2_reg;
reg   [0:0] icmp_ln32_reg_3160_pp1_iter3_reg;
wire  signed [31:0] tmp_9_fu_1616_p12;
reg  signed [31:0] tmp_9_reg_3164;
wire  signed [31:0] tmp_s_fu_1632_p12;
reg  signed [31:0] tmp_s_reg_3169;
wire  signed [31:0] tmp_2_fu_1648_p12;
reg  signed [31:0] tmp_2_reg_3174;
wire  signed [31:0] tmp_3_fu_1664_p12;
reg  signed [31:0] tmp_3_reg_3179;
wire   [31:0] mul_ln38_fu_1680_p2;
reg   [31:0] mul_ln38_reg_3184;
wire   [31:0] mul_ln38_1_fu_1684_p2;
reg   [31:0] mul_ln38_1_reg_3190;
wire   [31:0] mul_ln38_2_fu_1688_p2;
reg   [31:0] mul_ln38_2_reg_3195;
wire   [31:0] mul_ln38_3_fu_1692_p2;
reg   [31:0] mul_ln38_3_reg_3200;
wire  signed [31:0] tmp_4_fu_1696_p12;
reg  signed [31:0] tmp_4_reg_3205;
wire  signed [31:0] tmp_10_fu_1712_p12;
reg  signed [31:0] tmp_10_reg_3210;
wire  signed [31:0] tmp_11_fu_1728_p12;
reg  signed [31:0] tmp_11_reg_3215;
wire   [31:0] add_ln38_fu_1744_p2;
wire   [31:0] add_ln38_1_fu_1748_p2;
wire   [31:0] add_ln38_2_fu_1753_p2;
reg   [31:0] add_ln38_2_reg_3230;
wire   [31:0] mul_ln38_4_fu_1758_p2;
reg   [31:0] mul_ln38_4_reg_3236;
wire   [31:0] mul_ln38_5_fu_1762_p2;
reg   [31:0] mul_ln38_5_reg_3241;
wire   [31:0] mul_ln38_6_fu_1766_p2;
reg   [31:0] mul_ln38_6_reg_3246;
wire  signed [31:0] tmp_12_fu_1770_p12;
reg  signed [31:0] tmp_12_reg_3251;
wire  signed [31:0] tmp_13_fu_1786_p12;
reg  signed [31:0] tmp_13_reg_3256;
wire   [31:0] add_ln38_3_fu_1802_p2;
wire   [31:0] add_ln38_4_fu_1806_p2;
wire   [31:0] add_ln38_5_fu_1811_p2;
reg   [31:0] add_ln38_5_reg_3271;
wire   [31:0] mul_ln38_7_fu_1816_p2;
reg   [31:0] mul_ln38_7_reg_3277;
wire   [31:0] mul_ln38_8_fu_1820_p2;
reg   [31:0] mul_ln38_8_reg_3282;
wire  signed [31:0] tmp_14_fu_1824_p12;
reg  signed [31:0] tmp_14_reg_3287;
wire   [31:0] add_ln38_6_fu_1840_p2;
wire   [31:0] add_ln38_7_fu_1844_p2;
reg   [31:0] add_ln38_7_reg_3297;
wire   [31:0] mul_ln38_9_fu_1849_p2;
reg   [31:0] mul_ln38_9_reg_3303;
reg    ap_block_pp1_stage0_subdone;
reg    ap_predicate_tran12to19_state12;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg   [3:0] a_cache_0_address0;
reg    a_cache_0_ce0;
reg    a_cache_0_we0;
reg   [3:0] a_cache_1_address0;
reg    a_cache_1_ce0;
reg    a_cache_1_we0;
reg   [3:0] a_cache_2_address0;
reg    a_cache_2_ce0;
reg    a_cache_2_we0;
reg   [3:0] a_cache_3_address0;
reg    a_cache_3_ce0;
reg    a_cache_3_we0;
reg   [3:0] a_cache_4_address0;
reg    a_cache_4_ce0;
reg    a_cache_4_we0;
reg   [3:0] a_cache_5_address0;
reg    a_cache_5_ce0;
reg    a_cache_5_we0;
reg   [3:0] a_cache_6_address0;
reg    a_cache_6_ce0;
reg    a_cache_6_we0;
reg   [3:0] a_cache_7_address0;
reg    a_cache_7_ce0;
reg    a_cache_7_we0;
reg   [3:0] a_cache_8_address0;
reg    a_cache_8_ce0;
reg    a_cache_8_we0;
reg   [3:0] a_cache_9_address0;
reg    a_cache_9_ce0;
reg    a_cache_9_we0;
reg   [3:0] b_cache_0_address0;
reg    b_cache_0_ce0;
reg    b_cache_0_we0;
reg   [3:0] b_cache_0_address1;
reg    b_cache_0_ce1;
reg   [3:0] b_cache_1_address0;
reg    b_cache_1_ce0;
reg    b_cache_1_we0;
reg   [3:0] b_cache_1_address1;
reg    b_cache_1_ce1;
reg   [3:0] b_cache_2_address0;
reg    b_cache_2_ce0;
reg    b_cache_2_we0;
reg   [3:0] b_cache_2_address1;
reg    b_cache_2_ce1;
reg   [3:0] b_cache_3_address0;
reg    b_cache_3_ce0;
reg    b_cache_3_we0;
reg   [3:0] b_cache_3_address1;
reg    b_cache_3_ce1;
reg   [3:0] b_cache_4_address0;
reg    b_cache_4_ce0;
reg    b_cache_4_we0;
reg   [3:0] b_cache_4_address1;
reg    b_cache_4_ce1;
reg   [3:0] b_cache_5_address0;
reg    b_cache_5_ce0;
reg    b_cache_5_we0;
reg   [3:0] b_cache_5_address1;
reg    b_cache_5_ce1;
reg   [3:0] b_cache_6_address0;
reg    b_cache_6_ce0;
reg    b_cache_6_we0;
reg   [3:0] b_cache_6_address1;
reg    b_cache_6_ce1;
reg   [3:0] b_cache_7_address0;
reg    b_cache_7_ce0;
reg    b_cache_7_we0;
reg   [3:0] b_cache_7_address1;
reg    b_cache_7_ce1;
reg   [3:0] b_cache_8_address0;
reg    b_cache_8_ce0;
reg    b_cache_8_we0;
reg   [3:0] b_cache_8_address1;
reg    b_cache_8_ce1;
reg   [3:0] b_cache_9_address0;
reg    b_cache_9_ce0;
reg    b_cache_9_we0;
reg   [3:0] b_cache_9_address1;
reg    b_cache_9_ce1;
reg   [3:0] i_0_reg_1367;
wire    ap_CS_fsm_state4;
wire   [3:0] ap_phi_mux_j_0_phi_fu_1382_p4;
reg   [3:0] j_0_reg_1378;
reg   [3:0] i1_0_reg_1389;
wire    ap_CS_fsm_state19;
reg   [3:0] ap_phi_mux_j2_0_phi_fu_1404_p4;
reg   [31:0] ap_phi_mux_tmp_15_phi_fu_1417_p22;
wire   [31:0] ap_phi_reg_pp1_iter0_tmp_15_reg_1412;
reg   [31:0] ap_phi_reg_pp1_iter1_tmp_15_reg_1412;
reg   [31:0] ap_phi_reg_pp1_iter2_tmp_15_reg_1412;
reg   [31:0] ap_phi_reg_pp1_iter3_tmp_15_reg_1412;
reg   [31:0] ap_phi_reg_pp1_iter4_tmp_15_reg_1412;
reg   [31:0] ap_phi_reg_pp1_iter5_tmp_15_reg_1412;
wire   [31:0] add_ln38_8_fu_1853_p2;
wire   [63:0] zext_ln23_fu_1465_p1;
wire   [63:0] zext_ln38_fu_1581_p1;
wire    ap_block_pp1_stage0_01001;
wire   [31:0] zext_ln18_fu_1456_p1;
wire   [31:0] zext_ln20_fu_1501_p1;
wire   [31:0] zext_ln28_fu_1572_p1;
wire   [31:0] zext_ln30_fu_1607_p1;
reg   [12:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_1270;
reg    ap_condition_875;
reg    ap_condition_1274;
reg    ap_condition_1277;
reg    ap_condition_1280;
reg    ap_condition_1283;
reg    ap_condition_1286;
reg    ap_condition_1289;
reg    ap_condition_1292;
reg    ap_condition_1295;
reg    ap_condition_1298;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 a_V_0_sel_rd = 1'b0;
#0 a_V_0_sel_wr = 1'b0;
#0 a_V_0_state = 2'd0;
#0 b_V_0_sel_rd = 1'b0;
#0 b_V_0_sel_wr = 1'b0;
#0 b_V_0_state = 2'd0;
#0 c_V_1_sel_rd = 1'b0;
#0 c_V_1_sel_wr = 1'b0;
#0 c_V_1_state = 2'd0;
#0 n_0_sel_rd = 1'b0;
#0 n_0_sel_wr = 1'b0;
#0 n_0_state = 2'd0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
end

mul_a_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
a_cache_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_cache_0_address0),
    .ce0(a_cache_0_ce0),
    .we0(a_cache_0_we0),
    .d0(a_V_0_data_out),
    .q0(a_cache_0_q0)
);

mul_a_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
a_cache_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_cache_1_address0),
    .ce0(a_cache_1_ce0),
    .we0(a_cache_1_we0),
    .d0(a_V_0_data_out),
    .q0(a_cache_1_q0)
);

mul_a_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
a_cache_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_cache_2_address0),
    .ce0(a_cache_2_ce0),
    .we0(a_cache_2_we0),
    .d0(a_V_0_data_out),
    .q0(a_cache_2_q0)
);

mul_a_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
a_cache_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_cache_3_address0),
    .ce0(a_cache_3_ce0),
    .we0(a_cache_3_we0),
    .d0(a_V_0_data_out),
    .q0(a_cache_3_q0)
);

mul_a_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
a_cache_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_cache_4_address0),
    .ce0(a_cache_4_ce0),
    .we0(a_cache_4_we0),
    .d0(a_V_0_data_out),
    .q0(a_cache_4_q0)
);

mul_a_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
a_cache_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_cache_5_address0),
    .ce0(a_cache_5_ce0),
    .we0(a_cache_5_we0),
    .d0(a_V_0_data_out),
    .q0(a_cache_5_q0)
);

mul_a_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
a_cache_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_cache_6_address0),
    .ce0(a_cache_6_ce0),
    .we0(a_cache_6_we0),
    .d0(a_V_0_data_out),
    .q0(a_cache_6_q0)
);

mul_a_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
a_cache_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_cache_7_address0),
    .ce0(a_cache_7_ce0),
    .we0(a_cache_7_we0),
    .d0(a_V_0_data_out),
    .q0(a_cache_7_q0)
);

mul_a_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
a_cache_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_cache_8_address0),
    .ce0(a_cache_8_ce0),
    .we0(a_cache_8_we0),
    .d0(a_V_0_data_out),
    .q0(a_cache_8_q0)
);

mul_a_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
a_cache_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_cache_9_address0),
    .ce0(a_cache_9_ce0),
    .we0(a_cache_9_we0),
    .d0(a_V_0_data_out),
    .q0(a_cache_9_q0)
);

mul_b_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
b_cache_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_cache_0_address0),
    .ce0(b_cache_0_ce0),
    .we0(b_cache_0_we0),
    .d0(b_V_0_data_out),
    .q0(b_cache_0_q0),
    .address1(b_cache_0_address1),
    .ce1(b_cache_0_ce1),
    .q1(b_cache_0_q1)
);

mul_b_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
b_cache_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_cache_1_address0),
    .ce0(b_cache_1_ce0),
    .we0(b_cache_1_we0),
    .d0(b_V_0_data_out),
    .q0(b_cache_1_q0),
    .address1(b_cache_1_address1),
    .ce1(b_cache_1_ce1),
    .q1(b_cache_1_q1)
);

mul_b_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
b_cache_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_cache_2_address0),
    .ce0(b_cache_2_ce0),
    .we0(b_cache_2_we0),
    .d0(b_V_0_data_out),
    .q0(b_cache_2_q0),
    .address1(b_cache_2_address1),
    .ce1(b_cache_2_ce1),
    .q1(b_cache_2_q1)
);

mul_b_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
b_cache_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_cache_3_address0),
    .ce0(b_cache_3_ce0),
    .we0(b_cache_3_we0),
    .d0(b_V_0_data_out),
    .q0(b_cache_3_q0),
    .address1(b_cache_3_address1),
    .ce1(b_cache_3_ce1),
    .q1(b_cache_3_q1)
);

mul_b_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
b_cache_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_cache_4_address0),
    .ce0(b_cache_4_ce0),
    .we0(b_cache_4_we0),
    .d0(b_V_0_data_out),
    .q0(b_cache_4_q0),
    .address1(b_cache_4_address1),
    .ce1(b_cache_4_ce1),
    .q1(b_cache_4_q1)
);

mul_b_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
b_cache_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_cache_5_address0),
    .ce0(b_cache_5_ce0),
    .we0(b_cache_5_we0),
    .d0(b_V_0_data_out),
    .q0(b_cache_5_q0),
    .address1(b_cache_5_address1),
    .ce1(b_cache_5_ce1),
    .q1(b_cache_5_q1)
);

mul_b_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
b_cache_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_cache_6_address0),
    .ce0(b_cache_6_ce0),
    .we0(b_cache_6_we0),
    .d0(b_V_0_data_out),
    .q0(b_cache_6_q0),
    .address1(b_cache_6_address1),
    .ce1(b_cache_6_ce1),
    .q1(b_cache_6_q1)
);

mul_b_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
b_cache_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_cache_7_address0),
    .ce0(b_cache_7_ce0),
    .we0(b_cache_7_we0),
    .d0(b_V_0_data_out),
    .q0(b_cache_7_q0),
    .address1(b_cache_7_address1),
    .ce1(b_cache_7_ce1),
    .q1(b_cache_7_q1)
);

mul_b_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
b_cache_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_cache_8_address0),
    .ce0(b_cache_8_ce0),
    .we0(b_cache_8_we0),
    .d0(b_V_0_data_out),
    .q0(b_cache_8_q0),
    .address1(b_cache_8_address1),
    .ce1(b_cache_8_ce1),
    .q1(b_cache_8_q1)
);

mul_b_cache_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
b_cache_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_cache_9_address0),
    .ce0(b_cache_9_ce0),
    .we0(b_cache_9_we0),
    .d0(b_V_0_data_out),
    .q0(b_cache_9_q0),
    .address1(b_cache_9_address1),
    .ce1(b_cache_9_ce1),
    .q1(b_cache_9_q1)
);

mul_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mul_mux_104_32_1_1_U1(
    .din0(b_cache_0_load_reg_2100),
    .din1(b_cache_1_load_reg_2105),
    .din2(b_cache_2_load_reg_2110),
    .din3(b_cache_3_load_reg_2115),
    .din4(b_cache_4_load_reg_2120),
    .din5(b_cache_5_load_reg_2125),
    .din6(b_cache_6_load_reg_2130),
    .din7(b_cache_7_load_reg_2135),
    .din8(b_cache_8_load_reg_2140),
    .din9(b_cache_9_load_reg_2145),
    .din10(ap_phi_mux_j2_0_phi_fu_1404_p4),
    .dout(tmp_9_fu_1616_p12)
);

mul_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mul_mux_104_32_1_1_U2(
    .din0(b_cache_0_load_1_reg_2150),
    .din1(b_cache_1_load_1_reg_2155),
    .din2(b_cache_2_load_1_reg_2160),
    .din3(b_cache_3_load_1_reg_2165),
    .din4(b_cache_4_load_1_reg_2170),
    .din5(b_cache_5_load_1_reg_2175),
    .din6(b_cache_6_load_1_reg_2180),
    .din7(b_cache_7_load_1_reg_2185),
    .din8(b_cache_8_load_1_reg_2190),
    .din9(b_cache_9_load_1_reg_2195),
    .din10(ap_phi_mux_j2_0_phi_fu_1404_p4),
    .dout(tmp_s_fu_1632_p12)
);

mul_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mul_mux_104_32_1_1_U3(
    .din0(b_cache_0_load_2_reg_2300),
    .din1(b_cache_1_load_2_reg_2305),
    .din2(b_cache_2_load_2_reg_2310),
    .din3(b_cache_3_load_2_reg_2315),
    .din4(b_cache_4_load_2_reg_2320),
    .din5(b_cache_5_load_2_reg_2325),
    .din6(b_cache_6_load_2_reg_2330),
    .din7(b_cache_7_load_2_reg_2335),
    .din8(b_cache_8_load_2_reg_2340),
    .din9(b_cache_9_load_2_reg_2345),
    .din10(ap_phi_mux_j2_0_phi_fu_1404_p4),
    .dout(tmp_2_fu_1648_p12)
);

mul_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mul_mux_104_32_1_1_U4(
    .din0(b_cache_0_load_3_reg_2350),
    .din1(b_cache_1_load_3_reg_2355),
    .din2(b_cache_2_load_3_reg_2360),
    .din3(b_cache_3_load_3_reg_2365),
    .din4(b_cache_4_load_3_reg_2370),
    .din5(b_cache_5_load_3_reg_2375),
    .din6(b_cache_6_load_3_reg_2380),
    .din7(b_cache_7_load_3_reg_2385),
    .din8(b_cache_8_load_3_reg_2390),
    .din9(b_cache_9_load_3_reg_2395),
    .din10(ap_phi_mux_j2_0_phi_fu_1404_p4),
    .dout(tmp_3_fu_1664_p12)
);

mul_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mul_mux_104_32_1_1_U5(
    .din0(b_cache_0_load_4_reg_2500),
    .din1(b_cache_1_load_4_reg_2505),
    .din2(b_cache_2_load_4_reg_2510),
    .din3(b_cache_3_load_4_reg_2515),
    .din4(b_cache_4_load_4_reg_2520),
    .din5(b_cache_5_load_4_reg_2525),
    .din6(b_cache_6_load_4_reg_2530),
    .din7(b_cache_7_load_4_reg_2535),
    .din8(b_cache_8_load_4_reg_2540),
    .din9(b_cache_9_load_4_reg_2545),
    .din10(j2_0_reg_1400),
    .dout(tmp_4_fu_1696_p12)
);

mul_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mul_mux_104_32_1_1_U6(
    .din0(b_cache_0_load_5_reg_2550),
    .din1(b_cache_1_load_5_reg_2555),
    .din2(b_cache_2_load_5_reg_2560),
    .din3(b_cache_3_load_5_reg_2565),
    .din4(b_cache_4_load_5_reg_2570),
    .din5(b_cache_5_load_5_reg_2575),
    .din6(b_cache_6_load_5_reg_2580),
    .din7(b_cache_7_load_5_reg_2585),
    .din8(b_cache_8_load_5_reg_2590),
    .din9(b_cache_9_load_5_reg_2595),
    .din10(j2_0_reg_1400),
    .dout(tmp_10_fu_1712_p12)
);

mul_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mul_mux_104_32_1_1_U7(
    .din0(b_cache_0_load_6_reg_2700),
    .din1(b_cache_1_load_6_reg_2705),
    .din2(b_cache_2_load_6_reg_2710),
    .din3(b_cache_3_load_6_reg_2715),
    .din4(b_cache_4_load_6_reg_2720),
    .din5(b_cache_5_load_6_reg_2725),
    .din6(b_cache_6_load_6_reg_2730),
    .din7(b_cache_7_load_6_reg_2735),
    .din8(b_cache_8_load_6_reg_2740),
    .din9(b_cache_9_load_6_reg_2745),
    .din10(j2_0_reg_1400),
    .dout(tmp_11_fu_1728_p12)
);

mul_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mul_mux_104_32_1_1_U8(
    .din0(b_cache_0_load_7_reg_2750),
    .din1(b_cache_1_load_7_reg_2755),
    .din2(b_cache_2_load_7_reg_2760),
    .din3(b_cache_3_load_7_reg_2765),
    .din4(b_cache_4_load_7_reg_2770),
    .din5(b_cache_5_load_7_reg_2775),
    .din6(b_cache_6_load_7_reg_2780),
    .din7(b_cache_7_load_7_reg_2785),
    .din8(b_cache_8_load_7_reg_2790),
    .din9(b_cache_9_load_7_reg_2795),
    .din10(j2_0_reg_1400_pp1_iter1_reg),
    .dout(tmp_12_fu_1770_p12)
);

mul_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mul_mux_104_32_1_1_U9(
    .din0(b_cache_0_load_8_reg_2940),
    .din1(b_cache_1_load_8_reg_2945),
    .din2(b_cache_2_load_8_reg_2950),
    .din3(b_cache_3_load_8_reg_2955),
    .din4(b_cache_4_load_8_reg_2960),
    .din5(b_cache_5_load_8_reg_2965),
    .din6(b_cache_6_load_8_reg_2970),
    .din7(b_cache_7_load_8_reg_2975),
    .din8(b_cache_8_load_8_reg_2980),
    .din9(b_cache_9_load_8_reg_2985),
    .din10(j2_0_reg_1400_pp1_iter1_reg),
    .dout(tmp_13_fu_1786_p12)
);

mul_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mul_mux_104_32_1_1_U10(
    .din0(b_cache_0_load_9_reg_2990),
    .din1(b_cache_1_load_9_reg_2995),
    .din2(b_cache_2_load_9_reg_3000),
    .din3(b_cache_3_load_9_reg_3005),
    .din4(b_cache_4_load_9_reg_3010),
    .din5(b_cache_5_load_9_reg_3015),
    .din6(b_cache_6_load_9_reg_3020),
    .din7(b_cache_7_load_9_reg_3025),
    .din8(b_cache_8_load_9_reg_3030),
    .din9(b_cache_9_load_9_reg_3035),
    .din10(j2_0_reg_1400_pp1_iter2_reg),
    .dout(tmp_14_fu_1824_p12)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == a_V_0_ack_out) & (1'b1 == a_V_0_vld_out))) begin
            a_V_0_sel_rd <= ~a_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == a_V_0_ack_in) & (1'b1 == a_V_0_vld_in))) begin
            a_V_0_sel_wr <= ~a_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        a_V_0_state <= 2'd0;
    end else begin
        if ((((2'd2 == a_V_0_state) & (1'b0 == a_V_0_vld_in)) | ((2'd3 == a_V_0_state) & (1'b0 == a_V_0_vld_in) & (1'b1 == a_V_0_ack_out)))) begin
            a_V_0_state <= 2'd2;
        end else if ((((2'd1 == a_V_0_state) & (1'b0 == a_V_0_ack_out)) | ((2'd3 == a_V_0_state) & (1'b0 == a_V_0_ack_out) & (1'b1 == a_V_0_vld_in)))) begin
            a_V_0_state <= 2'd1;
        end else if (((~((1'b0 == a_V_0_vld_in) & (1'b1 == a_V_0_ack_out)) & ~((1'b0 == a_V_0_ack_out) & (1'b1 == a_V_0_vld_in)) & (2'd3 == a_V_0_state)) | ((2'd1 == a_V_0_state) & (1'b1 == a_V_0_ack_out)) | ((2'd2 == a_V_0_state) & (1'b1 == a_V_0_vld_in)))) begin
            a_V_0_state <= 2'd3;
        end else begin
            a_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state12)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp1_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b_V_0_sel_rd <= 1'b0;
    end else begin
        if (((b_V_0_ack_out == 1'b1) & (b_V_0_vld_out == 1'b1))) begin
            b_V_0_sel_rd <= ~b_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b_V_0_sel_wr <= 1'b0;
    end else begin
        if (((b_V_0_ack_in == 1'b1) & (b_V_0_vld_in == 1'b1))) begin
            b_V_0_sel_wr <= ~b_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b_V_0_state <= 2'd0;
    end else begin
        if ((((b_V_0_state == 2'd2) & (b_V_0_vld_in == 1'b0)) | ((b_V_0_state == 2'd3) & (b_V_0_vld_in == 1'b0) & (b_V_0_ack_out == 1'b1)))) begin
            b_V_0_state <= 2'd2;
        end else if ((((b_V_0_state == 2'd1) & (b_V_0_ack_out == 1'b0)) | ((b_V_0_state == 2'd3) & (b_V_0_ack_out == 1'b0) & (b_V_0_vld_in == 1'b1)))) begin
            b_V_0_state <= 2'd1;
        end else if (((~((b_V_0_vld_in == 1'b0) & (b_V_0_ack_out == 1'b1)) & ~((b_V_0_ack_out == 1'b0) & (b_V_0_vld_in == 1'b1)) & (b_V_0_state == 2'd3)) | ((b_V_0_state == 2'd1) & (b_V_0_ack_out == 1'b1)) | ((b_V_0_state == 2'd2) & (b_V_0_vld_in == 1'b1)))) begin
            b_V_0_state <= 2'd3;
        end else begin
            b_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c_V_1_sel_rd <= 1'b0;
    end else begin
        if (((c_V_1_ack_out == 1'b1) & (c_V_1_vld_out == 1'b1))) begin
            c_V_1_sel_rd <= ~c_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c_V_1_sel_wr <= 1'b0;
    end else begin
        if (((c_V_1_ack_in == 1'b1) & (c_V_1_vld_in == 1'b1))) begin
            c_V_1_sel_wr <= ~c_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        c_V_1_state <= 2'd0;
    end else begin
        if ((((c_V_1_state == 2'd2) & (c_V_1_vld_in == 1'b0)) | ((c_V_1_state == 2'd3) & (c_V_1_vld_in == 1'b0) & (c_V_1_ack_out == 1'b1)))) begin
            c_V_1_state <= 2'd2;
        end else if ((((c_V_1_state == 2'd1) & (c_V_TREADY == 1'b0)) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0) & (c_V_1_vld_in == 1'b1)))) begin
            c_V_1_state <= 2'd1;
        end else if (((~((c_V_1_vld_in == 1'b0) & (c_V_1_ack_out == 1'b1)) & ~((c_V_TREADY == 1'b0) & (c_V_1_vld_in == 1'b1)) & (c_V_1_state == 2'd3)) | ((c_V_1_state == 2'd1) & (c_V_1_ack_out == 1'b1)) | ((c_V_1_state == 2'd2) & (c_V_1_vld_in == 1'b1)))) begin
            c_V_1_state <= 2'd3;
        end else begin
            c_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        n_0_sel_rd <= 1'b0;
    end else begin
        if (((n_0_ack_out == 1'b1) & (n_0_vld_out == 1'b1))) begin
            n_0_sel_rd <= ~n_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        n_0_sel_wr <= 1'b0;
    end else begin
        if (((n_0_ack_in == 1'b1) & (n_0_vld_in == 1'b1))) begin
            n_0_sel_wr <= ~n_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        n_0_state <= 2'd0;
    end else begin
        if ((((n_0_state == 2'd2) & (n_0_vld_in == 1'b0)) | ((n_0_state == 2'd3) & (n_0_vld_in == 1'b0) & (n_0_ack_out == 1'b1)))) begin
            n_0_state <= 2'd2;
        end else if ((((n_0_state == 2'd1) & (n_0_ack_out == 1'b0)) | ((n_0_state == 2'd3) & (n_0_ack_out == 1'b0) & (n_0_vld_in == 1'b1)))) begin
            n_0_state <= 2'd1;
        end else if (((~((n_0_vld_in == 1'b0) & (n_0_ack_out == 1'b1)) & ~((n_0_ack_out == 1'b0) & (n_0_vld_in == 1'b1)) & (n_0_state == 2'd3)) | ((n_0_state == 2'd1) & (n_0_ack_out == 1'b1)) | ((n_0_state == 2'd2) & (n_0_vld_in == 1'b1)))) begin
            n_0_state <= 2'd3;
        end else begin
            n_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_875)) begin
        if ((1'b1 == ap_condition_1270)) begin
            ap_phi_reg_pp1_iter1_tmp_15_reg_1412 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_tmp_15_reg_1412 <= ap_phi_reg_pp1_iter0_tmp_15_reg_1412;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        if ((1'b1 == ap_condition_1280)) begin
            ap_phi_reg_pp1_iter3_tmp_15_reg_1412 <= add_ln38_1_fu_1748_p2;
        end else if ((1'b1 == ap_condition_1277)) begin
            ap_phi_reg_pp1_iter3_tmp_15_reg_1412 <= add_ln38_fu_1744_p2;
        end else if ((1'b1 == ap_condition_1274)) begin
            ap_phi_reg_pp1_iter3_tmp_15_reg_1412 <= mul_ln38_reg_3184;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_tmp_15_reg_1412 <= ap_phi_reg_pp1_iter2_tmp_15_reg_1412;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        if ((1'b1 == ap_condition_1289)) begin
            ap_phi_reg_pp1_iter4_tmp_15_reg_1412 <= add_ln38_4_fu_1806_p2;
        end else if ((1'b1 == ap_condition_1286)) begin
            ap_phi_reg_pp1_iter4_tmp_15_reg_1412 <= add_ln38_3_fu_1802_p2;
        end else if ((1'b1 == ap_condition_1283)) begin
            ap_phi_reg_pp1_iter4_tmp_15_reg_1412 <= add_ln38_2_reg_3230;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter4_tmp_15_reg_1412 <= ap_phi_reg_pp1_iter3_tmp_15_reg_1412;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        if ((1'b1 == ap_condition_1298)) begin
            ap_phi_reg_pp1_iter5_tmp_15_reg_1412 <= add_ln38_7_fu_1844_p2;
        end else if ((1'b1 == ap_condition_1295)) begin
            ap_phi_reg_pp1_iter5_tmp_15_reg_1412 <= add_ln38_6_fu_1840_p2;
        end else if ((1'b1 == ap_condition_1292)) begin
            ap_phi_reg_pp1_iter5_tmp_15_reg_1412 <= add_ln38_5_reg_3271;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter5_tmp_15_reg_1412 <= ap_phi_reg_pp1_iter4_tmp_15_reg_1412;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i1_0_reg_1389 <= i_1_reg_3043;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        i1_0_reg_1389 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_reg_1367 <= i_reg_1880;
    end else if ((~((n_0_vld_out == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_1367 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j2_0_reg_1400 <= 4'd0;
    end else if (((icmp_ln32_reg_3160 == 1'd0) & (icmp_ln30_reg_3151 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        j2_0_reg_1400 <= j_1_reg_3155;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_fu_1460_p2 == 1'd0) & (icmp_ln18_fu_1444_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_1378 <= 4'd0;
    end else if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j_0_reg_1378 <= j_fu_1495_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_V_0_load_A)) begin
        a_V_0_payload_A <= a_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == a_V_0_load_B)) begin
        a_V_0_payload_B <= a_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_fu_1460_p2 == 1'd0) & (icmp_ln18_fu_1444_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        a_cache_0_addr_reg_1889 <= zext_ln23_fu_1465_p1;
        a_cache_1_addr_reg_1894 <= zext_ln23_fu_1465_p1;
        a_cache_2_addr_reg_1899 <= zext_ln23_fu_1465_p1;
        a_cache_3_addr_reg_1904 <= zext_ln23_fu_1465_p1;
        a_cache_4_addr_reg_1909 <= zext_ln23_fu_1465_p1;
        a_cache_5_addr_reg_1914 <= zext_ln23_fu_1465_p1;
        a_cache_6_addr_reg_1919 <= zext_ln23_fu_1465_p1;
        a_cache_7_addr_reg_1924 <= zext_ln23_fu_1465_p1;
        a_cache_8_addr_reg_1929 <= zext_ln23_fu_1465_p1;
        a_cache_9_addr_reg_1934 <= zext_ln23_fu_1465_p1;
        b_cache_0_addr_reg_1939 <= zext_ln23_fu_1465_p1;
        b_cache_1_addr_reg_1944 <= zext_ln23_fu_1465_p1;
        b_cache_2_addr_reg_1949 <= zext_ln23_fu_1465_p1;
        b_cache_3_addr_reg_1954 <= zext_ln23_fu_1465_p1;
        b_cache_4_addr_reg_1959 <= zext_ln23_fu_1465_p1;
        b_cache_5_addr_reg_1964 <= zext_ln23_fu_1465_p1;
        b_cache_6_addr_reg_1969 <= zext_ln23_fu_1465_p1;
        b_cache_7_addr_reg_1974 <= zext_ln23_fu_1465_p1;
        b_cache_8_addr_reg_1979 <= zext_ln23_fu_1465_p1;
        b_cache_9_addr_reg_1984 <= zext_ln23_fu_1465_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        a_cache_0_load_reg_3101 <= a_cache_0_q0;
        a_cache_1_load_reg_3106 <= a_cache_1_q0;
        a_cache_2_load_reg_3111 <= a_cache_2_q0;
        a_cache_3_load_reg_3116 <= a_cache_3_q0;
        a_cache_4_load_reg_3121 <= a_cache_4_q0;
        a_cache_5_load_reg_3126 <= a_cache_5_q0;
        a_cache_6_load_reg_3131 <= a_cache_6_q0;
        a_cache_7_load_reg_3136 <= a_cache_7_q0;
        a_cache_8_load_reg_3141 <= a_cache_8_q0;
        a_cache_9_load_reg_3146 <= a_cache_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter1_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter1_reg == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln38_2_reg_3230 <= add_ln38_2_fu_1753_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter2_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter2_reg == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln38_5_reg_3271 <= add_ln38_5_fu_1811_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter3_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter3_reg == 1'd0) & (icmp_ln37_8_reg_2932 == 1'd0) & (icmp_ln37_7_reg_2928 == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln38_7_reg_3297 <= add_ln38_7_fu_1844_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_reg_pp1_iter2_tmp_15_reg_1412 <= ap_phi_reg_pp1_iter1_tmp_15_reg_1412;
    end
end

always @ (posedge ap_clk) begin
    if ((b_V_0_load_A == 1'b1)) begin
        b_V_0_payload_A <= b_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((b_V_0_load_B == 1'b1)) begin
        b_V_0_payload_B <= b_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_0_load_1_reg_2150 <= b_cache_0_q1;
        b_cache_0_load_reg_2100 <= b_cache_0_q0;
        b_cache_1_load_1_reg_2155 <= b_cache_1_q1;
        b_cache_1_load_reg_2105 <= b_cache_1_q0;
        b_cache_2_load_1_reg_2160 <= b_cache_2_q1;
        b_cache_2_load_reg_2110 <= b_cache_2_q0;
        b_cache_3_load_1_reg_2165 <= b_cache_3_q1;
        b_cache_3_load_reg_2115 <= b_cache_3_q0;
        b_cache_4_load_1_reg_2170 <= b_cache_4_q1;
        b_cache_4_load_reg_2120 <= b_cache_4_q0;
        b_cache_5_load_1_reg_2175 <= b_cache_5_q1;
        b_cache_5_load_reg_2125 <= b_cache_5_q0;
        b_cache_6_load_1_reg_2180 <= b_cache_6_q1;
        b_cache_6_load_reg_2130 <= b_cache_6_q0;
        b_cache_7_load_1_reg_2185 <= b_cache_7_q1;
        b_cache_7_load_reg_2135 <= b_cache_7_q0;
        b_cache_8_load_1_reg_2190 <= b_cache_8_q1;
        b_cache_8_load_reg_2140 <= b_cache_8_q0;
        b_cache_9_load_1_reg_2195 <= b_cache_9_q1;
        b_cache_9_load_reg_2145 <= b_cache_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_0_load_2_reg_2300 <= b_cache_0_q1;
        b_cache_0_load_3_reg_2350 <= b_cache_0_q0;
        b_cache_1_load_2_reg_2305 <= b_cache_1_q1;
        b_cache_1_load_3_reg_2355 <= b_cache_1_q0;
        b_cache_2_load_2_reg_2310 <= b_cache_2_q1;
        b_cache_2_load_3_reg_2360 <= b_cache_2_q0;
        b_cache_3_load_2_reg_2315 <= b_cache_3_q1;
        b_cache_3_load_3_reg_2365 <= b_cache_3_q0;
        b_cache_4_load_2_reg_2320 <= b_cache_4_q1;
        b_cache_4_load_3_reg_2370 <= b_cache_4_q0;
        b_cache_5_load_2_reg_2325 <= b_cache_5_q1;
        b_cache_5_load_3_reg_2375 <= b_cache_5_q0;
        b_cache_6_load_2_reg_2330 <= b_cache_6_q1;
        b_cache_6_load_3_reg_2380 <= b_cache_6_q0;
        b_cache_7_load_2_reg_2335 <= b_cache_7_q1;
        b_cache_7_load_3_reg_2385 <= b_cache_7_q0;
        b_cache_8_load_2_reg_2340 <= b_cache_8_q1;
        b_cache_8_load_3_reg_2390 <= b_cache_8_q0;
        b_cache_9_load_2_reg_2345 <= b_cache_9_q1;
        b_cache_9_load_3_reg_2395 <= b_cache_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_0_load_4_reg_2500 <= b_cache_0_q1;
        b_cache_0_load_5_reg_2550 <= b_cache_0_q0;
        b_cache_1_load_4_reg_2505 <= b_cache_1_q1;
        b_cache_1_load_5_reg_2555 <= b_cache_1_q0;
        b_cache_2_load_4_reg_2510 <= b_cache_2_q1;
        b_cache_2_load_5_reg_2560 <= b_cache_2_q0;
        b_cache_3_load_4_reg_2515 <= b_cache_3_q1;
        b_cache_3_load_5_reg_2565 <= b_cache_3_q0;
        b_cache_4_load_4_reg_2520 <= b_cache_4_q1;
        b_cache_4_load_5_reg_2570 <= b_cache_4_q0;
        b_cache_5_load_4_reg_2525 <= b_cache_5_q1;
        b_cache_5_load_5_reg_2575 <= b_cache_5_q0;
        b_cache_6_load_4_reg_2530 <= b_cache_6_q1;
        b_cache_6_load_5_reg_2580 <= b_cache_6_q0;
        b_cache_7_load_4_reg_2535 <= b_cache_7_q1;
        b_cache_7_load_5_reg_2585 <= b_cache_7_q0;
        b_cache_8_load_4_reg_2540 <= b_cache_8_q1;
        b_cache_8_load_5_reg_2590 <= b_cache_8_q0;
        b_cache_9_load_4_reg_2545 <= b_cache_9_q1;
        b_cache_9_load_5_reg_2595 <= b_cache_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_0_load_6_reg_2700 <= b_cache_0_q1;
        b_cache_0_load_7_reg_2750 <= b_cache_0_q0;
        b_cache_1_load_6_reg_2705 <= b_cache_1_q1;
        b_cache_1_load_7_reg_2755 <= b_cache_1_q0;
        b_cache_2_load_6_reg_2710 <= b_cache_2_q1;
        b_cache_2_load_7_reg_2760 <= b_cache_2_q0;
        b_cache_3_load_6_reg_2715 <= b_cache_3_q1;
        b_cache_3_load_7_reg_2765 <= b_cache_3_q0;
        b_cache_4_load_6_reg_2720 <= b_cache_4_q1;
        b_cache_4_load_7_reg_2770 <= b_cache_4_q0;
        b_cache_5_load_6_reg_2725 <= b_cache_5_q1;
        b_cache_5_load_7_reg_2775 <= b_cache_5_q0;
        b_cache_6_load_6_reg_2730 <= b_cache_6_q1;
        b_cache_6_load_7_reg_2780 <= b_cache_6_q0;
        b_cache_7_load_6_reg_2735 <= b_cache_7_q1;
        b_cache_7_load_7_reg_2785 <= b_cache_7_q0;
        b_cache_8_load_6_reg_2740 <= b_cache_8_q1;
        b_cache_8_load_7_reg_2790 <= b_cache_8_q0;
        b_cache_9_load_6_reg_2745 <= b_cache_9_q1;
        b_cache_9_load_7_reg_2795 <= b_cache_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        b_cache_0_load_8_reg_2940 <= b_cache_0_q1;
        b_cache_0_load_9_reg_2990 <= b_cache_0_q0;
        b_cache_1_load_8_reg_2945 <= b_cache_1_q1;
        b_cache_1_load_9_reg_2995 <= b_cache_1_q0;
        b_cache_2_load_8_reg_2950 <= b_cache_2_q1;
        b_cache_2_load_9_reg_3000 <= b_cache_2_q0;
        b_cache_3_load_8_reg_2955 <= b_cache_3_q1;
        b_cache_3_load_9_reg_3005 <= b_cache_3_q0;
        b_cache_4_load_8_reg_2960 <= b_cache_4_q1;
        b_cache_4_load_9_reg_3010 <= b_cache_4_q0;
        b_cache_5_load_8_reg_2965 <= b_cache_5_q1;
        b_cache_5_load_9_reg_3015 <= b_cache_5_q0;
        b_cache_6_load_8_reg_2970 <= b_cache_6_q1;
        b_cache_6_load_9_reg_3020 <= b_cache_6_q0;
        b_cache_7_load_8_reg_2975 <= b_cache_7_q1;
        b_cache_7_load_9_reg_3025 <= b_cache_7_q0;
        b_cache_8_load_8_reg_2980 <= b_cache_8_q1;
        b_cache_8_load_9_reg_3030 <= b_cache_8_q0;
        b_cache_9_load_8_reg_2985 <= b_cache_9_q1;
        b_cache_9_load_9_reg_3035 <= b_cache_9_q0;
        icmp_ln37_1_reg_2904 <= icmp_ln37_1_fu_1515_p2;
        icmp_ln37_2_reg_2908 <= icmp_ln37_2_fu_1520_p2;
        icmp_ln37_3_reg_2912 <= icmp_ln37_3_fu_1525_p2;
        icmp_ln37_4_reg_2916 <= icmp_ln37_4_fu_1530_p2;
        icmp_ln37_5_reg_2920 <= icmp_ln37_5_fu_1535_p2;
        icmp_ln37_6_reg_2924 <= icmp_ln37_6_fu_1540_p2;
        icmp_ln37_7_reg_2928 <= icmp_ln37_7_fu_1545_p2;
        icmp_ln37_8_reg_2932 <= icmp_ln37_8_fu_1550_p2;
        icmp_ln37_9_reg_2936 <= icmp_ln37_9_fu_1555_p2;
        icmp_ln37_reg_2900 <= icmp_ln37_fu_1510_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((c_V_1_load_A == 1'b1)) begin
        c_V_1_payload_A <= ap_phi_mux_tmp_15_phi_fu_1417_p22;
    end
end

always @ (posedge ap_clk) begin
    if ((c_V_1_load_B == 1'b1)) begin
        c_V_1_payload_B <= ap_phi_mux_tmp_15_phi_fu_1417_p22;
    end
end

always @ (posedge ap_clk) begin
    if ((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10))) begin
        i_1_reg_3043 <= i_1_fu_1566_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1880 <= i_fu_1450_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln30_reg_3151 <= icmp_ln30_fu_1595_p2;
        icmp_ln30_reg_3151_pp1_iter1_reg <= icmp_ln30_reg_3151;
        icmp_ln32_reg_3160_pp1_iter1_reg <= icmp_ln32_reg_3160;
        j2_0_reg_1400_pp1_iter1_reg <= j2_0_reg_1400;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln30_reg_3151_pp1_iter2_reg <= icmp_ln30_reg_3151_pp1_iter1_reg;
        icmp_ln30_reg_3151_pp1_iter3_reg <= icmp_ln30_reg_3151_pp1_iter2_reg;
        icmp_ln30_reg_3151_pp1_iter4_reg <= icmp_ln30_reg_3151_pp1_iter3_reg;
        icmp_ln30_reg_3151_pp1_iter5_reg <= icmp_ln30_reg_3151_pp1_iter4_reg;
        icmp_ln32_reg_3160_pp1_iter2_reg <= icmp_ln32_reg_3160_pp1_iter1_reg;
        icmp_ln32_reg_3160_pp1_iter3_reg <= icmp_ln32_reg_3160_pp1_iter2_reg;
        icmp_ln32_reg_3160_pp1_iter4_reg <= icmp_ln32_reg_3160_pp1_iter3_reg;
        icmp_ln32_reg_3160_pp1_iter5_reg <= icmp_ln32_reg_3160_pp1_iter4_reg;
        j2_0_reg_1400_pp1_iter2_reg <= j2_0_reg_1400_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_fu_1595_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln32_reg_3160 <= icmp_ln32_fu_1611_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_1_reg_3155 <= j_1_fu_1601_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (icmp_ln32_reg_3160 == 1'd0) & (icmp_ln30_reg_3151 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        mul_ln38_1_reg_3190 <= mul_ln38_1_fu_1684_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (icmp_ln32_reg_3160 == 1'd0) & (icmp_ln30_reg_3151 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        mul_ln38_2_reg_3195 <= mul_ln38_2_fu_1688_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (icmp_ln32_reg_3160 == 1'd0) & (icmp_ln30_reg_3151 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        mul_ln38_3_reg_3200 <= mul_ln38_3_fu_1692_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter1_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter1_reg == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_ln38_4_reg_3236 <= mul_ln38_4_fu_1758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter1_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter1_reg == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_ln38_5_reg_3241 <= mul_ln38_5_fu_1762_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter1_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter1_reg == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_ln38_6_reg_3246 <= mul_ln38_6_fu_1766_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter2_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter2_reg == 1'd0) & (icmp_ln37_7_reg_2928 == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_ln38_7_reg_3277 <= mul_ln38_7_fu_1816_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter2_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter2_reg == 1'd0) & (icmp_ln37_8_reg_2932 == 1'd0) & (icmp_ln37_7_reg_2928 == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_ln38_8_reg_3282 <= mul_ln38_8_fu_1820_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter3_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter3_reg == 1'd0) & (icmp_ln37_9_reg_2936 == 1'd0) & (icmp_ln37_8_reg_2932 == 1'd0) & (icmp_ln37_7_reg_2928 == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_ln38_9_reg_3303 <= mul_ln38_9_fu_1849_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_2900 == 1'd0) & (icmp_ln32_reg_3160 == 1'd0) & (icmp_ln30_reg_3151 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        mul_ln38_reg_3184 <= mul_ln38_fu_1680_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((n_0_load_A == 1'b1)) begin
        n_0_payload_A <= n_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((n_0_load_B == 1'b1)) begin
        n_0_payload_B <= n_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((n_0_vld_out == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_read_reg_1858 <= n_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (icmp_ln32_reg_3160 == 1'd0) & (icmp_ln30_reg_3151 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_10_reg_3210 <= tmp_10_fu_1712_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (icmp_ln32_reg_3160 == 1'd0) & (icmp_ln30_reg_3151 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_11_reg_3215 <= tmp_11_fu_1728_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter1_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter1_reg == 1'd0) & (icmp_ln37_7_reg_2928 == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_12_reg_3251 <= tmp_12_fu_1770_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter1_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter1_reg == 1'd0) & (icmp_ln37_8_reg_2932 == 1'd0) & (icmp_ln37_7_reg_2928 == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_13_reg_3256 <= tmp_13_fu_1786_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_3160_pp1_iter2_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter2_reg == 1'd0) & (icmp_ln37_9_reg_2936 == 1'd0) & (icmp_ln37_8_reg_2932 == 1'd0) & (icmp_ln37_7_reg_2928 == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_14_reg_3287 <= tmp_14_fu_1824_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1611_p2 == 1'd0) & (icmp_ln30_fu_1595_p2 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_2_reg_3174 <= tmp_2_fu_1648_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1611_p2 == 1'd0) & (icmp_ln30_fu_1595_p2 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_3_reg_3179 <= tmp_3_fu_1664_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (icmp_ln32_reg_3160 == 1'd0) & (icmp_ln30_reg_3151 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_4_reg_3205 <= tmp_4_fu_1696_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1611_p2 == 1'd0) & (icmp_ln30_fu_1595_p2 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_9_reg_3164 <= tmp_9_fu_1616_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1611_p2 == 1'd0) & (icmp_ln30_fu_1595_p2 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_s_reg_3169 <= tmp_s_fu_1632_p12;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (ap_predicate_op134_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        a_V_0_ack_out = 1'b1;
    end else begin
        a_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == a_V_0_sel)) begin
        a_V_0_data_out = a_V_0_payload_B;
    end else begin
        a_V_0_data_out = a_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        a_V_TDATA_blk_n = a_V_0_state[1'd0];
    end else begin
        a_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_cache_0_address0 = zext_ln38_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_cache_0_address0 = a_cache_0_addr_reg_1889;
    end else begin
        a_cache_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_cache_0_ce0 = 1'b1;
    end else begin
        a_cache_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd0))) begin
        a_cache_0_we0 = 1'b1;
    end else begin
        a_cache_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_cache_1_address0 = zext_ln38_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_cache_1_address0 = a_cache_1_addr_reg_1894;
    end else begin
        a_cache_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_cache_1_ce0 = 1'b1;
    end else begin
        a_cache_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd1))) begin
        a_cache_1_we0 = 1'b1;
    end else begin
        a_cache_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_cache_2_address0 = zext_ln38_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_cache_2_address0 = a_cache_2_addr_reg_1899;
    end else begin
        a_cache_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_cache_2_ce0 = 1'b1;
    end else begin
        a_cache_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd2))) begin
        a_cache_2_we0 = 1'b1;
    end else begin
        a_cache_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_cache_3_address0 = zext_ln38_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_cache_3_address0 = a_cache_3_addr_reg_1904;
    end else begin
        a_cache_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_cache_3_ce0 = 1'b1;
    end else begin
        a_cache_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd3))) begin
        a_cache_3_we0 = 1'b1;
    end else begin
        a_cache_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_cache_4_address0 = zext_ln38_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_cache_4_address0 = a_cache_4_addr_reg_1909;
    end else begin
        a_cache_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_cache_4_ce0 = 1'b1;
    end else begin
        a_cache_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd4))) begin
        a_cache_4_we0 = 1'b1;
    end else begin
        a_cache_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_cache_5_address0 = zext_ln38_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_cache_5_address0 = a_cache_5_addr_reg_1914;
    end else begin
        a_cache_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_cache_5_ce0 = 1'b1;
    end else begin
        a_cache_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd5))) begin
        a_cache_5_we0 = 1'b1;
    end else begin
        a_cache_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_cache_6_address0 = zext_ln38_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_cache_6_address0 = a_cache_6_addr_reg_1919;
    end else begin
        a_cache_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_cache_6_ce0 = 1'b1;
    end else begin
        a_cache_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd6))) begin
        a_cache_6_we0 = 1'b1;
    end else begin
        a_cache_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_cache_7_address0 = zext_ln38_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_cache_7_address0 = a_cache_7_addr_reg_1924;
    end else begin
        a_cache_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_cache_7_ce0 = 1'b1;
    end else begin
        a_cache_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd7))) begin
        a_cache_7_we0 = 1'b1;
    end else begin
        a_cache_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_cache_8_address0 = zext_ln38_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_cache_8_address0 = a_cache_8_addr_reg_1929;
    end else begin
        a_cache_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_cache_8_ce0 = 1'b1;
    end else begin
        a_cache_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd8))) begin
        a_cache_8_we0 = 1'b1;
    end else begin
        a_cache_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_cache_9_address0 = zext_ln38_fu_1581_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_cache_9_address0 = a_cache_9_addr_reg_1934;
    end else begin
        a_cache_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10)) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        a_cache_9_ce0 = 1'b1;
    end else begin
        a_cache_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd8) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd7) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd6) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd5) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd4) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd3) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd2) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd1) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd0) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        a_cache_9_we0 = 1'b1;
    end else begin
        a_cache_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_predicate_tran12to19_state12 == 1'b1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10) & ((icmp_ln29_fu_1576_p2 == 1'd1) | (icmp_ln28_fu_1560_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln32_reg_3160 == 1'd0) & (icmp_ln30_reg_3151 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_j2_0_phi_fu_1404_p4 = j_1_reg_3155;
    end else begin
        ap_phi_mux_j2_0_phi_fu_1404_p4 = j2_0_reg_1400;
    end
end

always @ (*) begin
    if (((icmp_ln37_9_reg_2936 == 1'd0) & (icmp_ln37_8_reg_2932 == 1'd0) & (icmp_ln37_7_reg_2928 == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0) & (icmp_ln32_reg_3160_pp1_iter4_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_tmp_15_phi_fu_1417_p22 = add_ln38_8_fu_1853_p2;
    end else begin
        ap_phi_mux_tmp_15_phi_fu_1417_p22 = ap_phi_reg_pp1_iter5_tmp_15_reg_1412;
    end
end

always @ (*) begin
    if ((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10) & ((icmp_ln29_fu_1576_p2 == 1'd1) | (icmp_ln28_fu_1560_p2 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (ap_predicate_op135_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        b_V_0_ack_out = 1'b1;
    end else begin
        b_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((b_V_0_sel == 1'b1)) begin
        b_V_0_data_out = b_V_0_payload_B;
    end else begin
        b_V_0_data_out = b_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        b_V_TDATA_blk_n = b_V_0_state[1'd0];
    end else begin
        b_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_0_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_0_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_0_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_cache_0_address0 = b_cache_0_addr_reg_1939;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_0_address0 = 64'd0;
    end else begin
        b_cache_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_0_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_0_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_0_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_0_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_0_address1 = 64'd1;
    end else begin
        b_cache_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        b_cache_0_ce0 = 1'b1;
    end else begin
        b_cache_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        b_cache_0_ce1 = 1'b1;
    end else begin
        b_cache_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd0))) begin
        b_cache_0_we0 = 1'b1;
    end else begin
        b_cache_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_1_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_1_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_1_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_cache_1_address0 = b_cache_1_addr_reg_1944;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_1_address0 = 64'd0;
    end else begin
        b_cache_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_1_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_1_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_1_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_1_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_1_address1 = 64'd1;
    end else begin
        b_cache_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        b_cache_1_ce0 = 1'b1;
    end else begin
        b_cache_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        b_cache_1_ce1 = 1'b1;
    end else begin
        b_cache_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd1))) begin
        b_cache_1_we0 = 1'b1;
    end else begin
        b_cache_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_2_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_2_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_2_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_cache_2_address0 = b_cache_2_addr_reg_1949;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_2_address0 = 64'd0;
    end else begin
        b_cache_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_2_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_2_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_2_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_2_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_2_address1 = 64'd1;
    end else begin
        b_cache_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        b_cache_2_ce0 = 1'b1;
    end else begin
        b_cache_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        b_cache_2_ce1 = 1'b1;
    end else begin
        b_cache_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd2))) begin
        b_cache_2_we0 = 1'b1;
    end else begin
        b_cache_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_3_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_3_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_3_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_3_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_cache_3_address0 = b_cache_3_addr_reg_1954;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_3_address0 = 64'd0;
    end else begin
        b_cache_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_3_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_3_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_3_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_3_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_3_address1 = 64'd1;
    end else begin
        b_cache_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        b_cache_3_ce0 = 1'b1;
    end else begin
        b_cache_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        b_cache_3_ce1 = 1'b1;
    end else begin
        b_cache_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd3))) begin
        b_cache_3_we0 = 1'b1;
    end else begin
        b_cache_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_4_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_4_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_4_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_4_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_cache_4_address0 = b_cache_4_addr_reg_1959;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_4_address0 = 64'd0;
    end else begin
        b_cache_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_4_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_4_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_4_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_4_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_4_address1 = 64'd1;
    end else begin
        b_cache_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        b_cache_4_ce0 = 1'b1;
    end else begin
        b_cache_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        b_cache_4_ce1 = 1'b1;
    end else begin
        b_cache_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd4))) begin
        b_cache_4_we0 = 1'b1;
    end else begin
        b_cache_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_5_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_5_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_5_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_5_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_cache_5_address0 = b_cache_5_addr_reg_1964;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_5_address0 = 64'd0;
    end else begin
        b_cache_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_5_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_5_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_5_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_5_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_5_address1 = 64'd1;
    end else begin
        b_cache_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        b_cache_5_ce0 = 1'b1;
    end else begin
        b_cache_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        b_cache_5_ce1 = 1'b1;
    end else begin
        b_cache_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd5))) begin
        b_cache_5_we0 = 1'b1;
    end else begin
        b_cache_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_6_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_6_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_6_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_6_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_cache_6_address0 = b_cache_6_addr_reg_1969;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_6_address0 = 64'd0;
    end else begin
        b_cache_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_6_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_6_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_6_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_6_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_6_address1 = 64'd1;
    end else begin
        b_cache_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        b_cache_6_ce0 = 1'b1;
    end else begin
        b_cache_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        b_cache_6_ce1 = 1'b1;
    end else begin
        b_cache_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd6))) begin
        b_cache_6_we0 = 1'b1;
    end else begin
        b_cache_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_7_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_7_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_7_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_7_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_cache_7_address0 = b_cache_7_addr_reg_1974;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_7_address0 = 64'd0;
    end else begin
        b_cache_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_7_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_7_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_7_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_7_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_7_address1 = 64'd1;
    end else begin
        b_cache_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        b_cache_7_ce0 = 1'b1;
    end else begin
        b_cache_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        b_cache_7_ce1 = 1'b1;
    end else begin
        b_cache_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd7))) begin
        b_cache_7_we0 = 1'b1;
    end else begin
        b_cache_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_8_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_8_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_8_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_8_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_cache_8_address0 = b_cache_8_addr_reg_1979;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_8_address0 = 64'd0;
    end else begin
        b_cache_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_8_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_8_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_8_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_8_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_8_address1 = 64'd1;
    end else begin
        b_cache_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        b_cache_8_ce0 = 1'b1;
    end else begin
        b_cache_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        b_cache_8_ce1 = 1'b1;
    end else begin
        b_cache_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd8))) begin
        b_cache_8_we0 = 1'b1;
    end else begin
        b_cache_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_9_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_9_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_9_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_9_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        b_cache_9_address0 = b_cache_9_addr_reg_1984;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_9_address0 = 64'd0;
    end else begin
        b_cache_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_cache_9_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_cache_9_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_cache_9_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_cache_9_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        b_cache_9_address1 = 64'd1;
    end else begin
        b_cache_9_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3)))) begin
        b_cache_9_ce0 = 1'b1;
    end else begin
        b_cache_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        b_cache_9_ce1 = 1'b1;
    end else begin
        b_cache_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd8) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd7) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd6) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd5) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd4) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd3) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd2) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd1) & ~(ap_phi_mux_j_0_phi_fu_1382_p4 == 4'd0) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        b_cache_9_we0 = 1'b1;
    end else begin
        b_cache_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((c_V_1_sel == 1'b1)) begin
        c_V_1_data_out = c_V_1_payload_B;
    end else begin
        c_V_1_data_out = c_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op537_write_state17 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        c_V_1_vld_in = 1'b1;
    end else begin
        c_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln32_reg_3160_pp1_iter5_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter5_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1)) | ((icmp_ln32_reg_3160_pp1_iter4_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
        c_V_TDATA_blk_n = c_V_1_state[1'd1];
    end else begin
        c_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((n_0_vld_out == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_0_ack_out = 1'b1;
    end else begin
        n_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((n_0_sel == 1'b1)) begin
        n_0_data_out = n_0_payload_B;
    end else begin
        n_0_data_out = n_0_payload_A;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        n_TDATA_blk_n = n_0_state[1'd0];
    end else begin
        n_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((n_0_vld_out == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln19_fu_1460_p2 == 1'd0) & (icmp_ln18_fu_1444_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~(((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out))) & (1'b1 == ap_CS_fsm_state3) & ((icmp_ln22_fu_1505_p2 == 1'd1) | (icmp_ln20_fu_1489_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if ((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state10) & ((icmp_ln29_fu_1576_p2 == 1'd1) | (icmp_ln28_fu_1560_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0))) & (icmp_ln29_fu_1576_p2 == 1'd0) & (icmp_ln28_fu_1560_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_predicate_tran12to19_state12 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_predicate_tran12to19_state12 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_V_0_ack_in = a_V_0_state[1'd1];

assign a_V_0_load_A = (~a_V_0_sel_wr & a_V_0_state_cmp_full);

assign a_V_0_load_B = (a_V_0_state_cmp_full & a_V_0_sel_wr);

assign a_V_0_sel = a_V_0_sel_rd;

assign a_V_0_state_cmp_full = ((a_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign a_V_0_vld_in = a_V_TVALID;

assign a_V_0_vld_out = a_V_0_state[1'd0];

assign a_V_TREADY = a_V_0_state[1'd1];

assign add_ln38_1_fu_1748_p2 = (mul_ln38_2_reg_3195 + add_ln38_fu_1744_p2);

assign add_ln38_2_fu_1753_p2 = (mul_ln38_3_reg_3200 + add_ln38_1_fu_1748_p2);

assign add_ln38_3_fu_1802_p2 = (mul_ln38_4_reg_3236 + add_ln38_2_reg_3230);

assign add_ln38_4_fu_1806_p2 = (mul_ln38_5_reg_3241 + add_ln38_3_fu_1802_p2);

assign add_ln38_5_fu_1811_p2 = (mul_ln38_6_reg_3246 + add_ln38_4_fu_1806_p2);

assign add_ln38_6_fu_1840_p2 = (mul_ln38_7_reg_3277 + add_ln38_5_reg_3271);

assign add_ln38_7_fu_1844_p2 = (mul_ln38_8_reg_3282 + add_ln38_6_fu_1840_p2);

assign add_ln38_8_fu_1853_p2 = (mul_ln38_9_reg_3303 + add_ln38_7_reg_3297);

assign add_ln38_fu_1744_p2 = (mul_ln38_1_reg_3190 + mul_ln38_reg_3184);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter6 == 1'b1)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter6 == 1'b1)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter5 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((n_0_vld_out == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state10 = ((c_V_1_state == 2'd1) | ((c_V_1_state == 2'd3) & (c_V_TREADY == 1'b0)));
end

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_io = ((ap_predicate_op537_write_state17 == 1'b1) & (c_V_1_ack_in == 1'b0));
end

assign ap_block_state17_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_io = ((ap_predicate_op538_write_state18 == 1'b1) & (c_V_1_ack_in == 1'b0));
end

assign ap_block_state18_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3 = (((ap_predicate_op135_read_state3 == 1'b1) & (b_V_0_vld_out == 1'b0)) | ((ap_predicate_op134_read_state3 == 1'b1) & (1'b0 == a_V_0_vld_out)));
end

always @ (*) begin
    ap_condition_1270 = ((icmp_ln37_reg_2900 == 1'd1) & (icmp_ln32_fu_1611_p2 == 1'd0) & (icmp_ln30_fu_1595_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1274 = ((icmp_ln37_1_reg_2904 == 1'd1) & (icmp_ln32_reg_3160_pp1_iter1_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter1_reg == 1'd0) & (icmp_ln37_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_condition_1277 = ((icmp_ln37_2_reg_2908 == 1'd1) & (icmp_ln32_reg_3160_pp1_iter1_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter1_reg == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_condition_1280 = ((icmp_ln37_3_reg_2912 == 1'd1) & (icmp_ln32_reg_3160_pp1_iter1_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter1_reg == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_condition_1283 = ((icmp_ln37_4_reg_2916 == 1'd1) & (icmp_ln32_reg_3160_pp1_iter2_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter2_reg == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_condition_1286 = ((icmp_ln37_5_reg_2920 == 1'd1) & (icmp_ln32_reg_3160_pp1_iter2_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter2_reg == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_condition_1289 = ((icmp_ln37_6_reg_2924 == 1'd1) & (icmp_ln32_reg_3160_pp1_iter2_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter2_reg == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_condition_1292 = ((icmp_ln37_7_reg_2928 == 1'd1) & (icmp_ln32_reg_3160_pp1_iter3_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter3_reg == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_condition_1295 = ((icmp_ln37_8_reg_2932 == 1'd1) & (icmp_ln32_reg_3160_pp1_iter3_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter3_reg == 1'd0) & (icmp_ln37_7_reg_2928 == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_condition_1298 = ((icmp_ln37_9_reg_2936 == 1'd1) & (icmp_ln32_reg_3160_pp1_iter3_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter3_reg == 1'd0) & (icmp_ln37_8_reg_2932 == 1'd0) & (icmp_ln37_7_reg_2928 == 1'd0) & (icmp_ln37_6_reg_2924 == 1'd0) & (icmp_ln37_5_reg_2920 == 1'd0) & (icmp_ln37_4_reg_2916 == 1'd0) & (icmp_ln37_3_reg_2912 == 1'd0) & (icmp_ln37_2_reg_2908 == 1'd0) & (icmp_ln37_1_reg_2904 == 1'd0) & (icmp_ln37_reg_2900 == 1'd0));
end

always @ (*) begin
    ap_condition_875 = ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_j_0_phi_fu_1382_p4 = j_0_reg_1378;

assign ap_phi_reg_pp1_iter0_tmp_15_reg_1412 = 'bx;

always @ (*) begin
    ap_predicate_op134_read_state3 = ((icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op135_read_state3 = ((icmp_ln22_fu_1505_p2 == 1'd0) & (icmp_ln20_fu_1489_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op537_write_state17 = ((icmp_ln32_reg_3160_pp1_iter4_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op538_write_state18 = ((icmp_ln32_reg_3160_pp1_iter5_reg == 1'd0) & (icmp_ln30_reg_3151_pp1_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_tran12to19_state12 = ((icmp_ln32_fu_1611_p2 == 1'd1) | (icmp_ln30_fu_1595_p2 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b_V_0_ack_in = b_V_0_state[1'd1];

assign b_V_0_load_A = (~b_V_0_sel_wr & b_V_0_state_cmp_full);

assign b_V_0_load_B = (b_V_0_state_cmp_full & b_V_0_sel_wr);

assign b_V_0_sel = b_V_0_sel_rd;

assign b_V_0_state_cmp_full = ((b_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign b_V_0_vld_in = b_V_TVALID;

assign b_V_0_vld_out = b_V_0_state[1'd0];

assign b_V_TREADY = b_V_0_state[1'd1];

assign c_V_1_ack_in = c_V_1_state[1'd1];

assign c_V_1_ack_out = c_V_TREADY;

assign c_V_1_load_A = (~c_V_1_sel_wr & c_V_1_state_cmp_full);

assign c_V_1_load_B = (c_V_1_state_cmp_full & c_V_1_sel_wr);

assign c_V_1_sel = c_V_1_sel_rd;

assign c_V_1_state_cmp_full = ((c_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign c_V_1_vld_out = c_V_1_state[1'd0];

assign c_V_TDATA = c_V_1_data_out;

assign c_V_TVALID = c_V_1_state[1'd0];

assign i_1_fu_1566_p2 = (i1_0_reg_1389 + 4'd1);

assign i_fu_1450_p2 = (i_0_reg_1367 + 4'd1);

assign icmp_ln18_fu_1444_p2 = ((i_0_reg_1367 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_1460_p2 = ((zext_ln18_fu_1456_p1 == n_read_reg_1858) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_1489_p2 = ((j_0_reg_1378 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_1505_p2 = ((zext_ln20_fu_1501_p1 == n_read_reg_1858) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_1560_p2 = ((i1_0_reg_1389 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_1576_p2 = ((zext_ln28_fu_1572_p1 == n_read_reg_1858) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_1595_p2 = ((ap_phi_mux_j2_0_phi_fu_1404_p4 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_1611_p2 = ((zext_ln30_fu_1607_p1 == n_read_reg_1858) ? 1'b1 : 1'b0);

assign icmp_ln37_1_fu_1515_p2 = ((n_read_reg_1858 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln37_2_fu_1520_p2 = ((n_read_reg_1858 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln37_3_fu_1525_p2 = ((n_read_reg_1858 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln37_4_fu_1530_p2 = ((n_read_reg_1858 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln37_5_fu_1535_p2 = ((n_read_reg_1858 == 32'd5) ? 1'b1 : 1'b0);

assign icmp_ln37_6_fu_1540_p2 = ((n_read_reg_1858 == 32'd6) ? 1'b1 : 1'b0);

assign icmp_ln37_7_fu_1545_p2 = ((n_read_reg_1858 == 32'd7) ? 1'b1 : 1'b0);

assign icmp_ln37_8_fu_1550_p2 = ((n_read_reg_1858 == 32'd8) ? 1'b1 : 1'b0);

assign icmp_ln37_9_fu_1555_p2 = ((n_read_reg_1858 == 32'd9) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_1510_p2 = ((n_read_reg_1858 == 32'd0) ? 1'b1 : 1'b0);

assign j_1_fu_1601_p2 = (ap_phi_mux_j2_0_phi_fu_1404_p4 + 4'd1);

assign j_fu_1495_p2 = (j_0_reg_1378 + 4'd1);

assign mul_ln38_1_fu_1684_p2 = ($signed(a_cache_1_load_reg_3106) * $signed(tmp_s_reg_3169));

assign mul_ln38_2_fu_1688_p2 = ($signed(a_cache_2_load_reg_3111) * $signed(tmp_2_reg_3174));

assign mul_ln38_3_fu_1692_p2 = ($signed(a_cache_3_load_reg_3116) * $signed(tmp_3_reg_3179));

assign mul_ln38_4_fu_1758_p2 = ($signed(a_cache_4_load_reg_3121) * $signed(tmp_4_reg_3205));

assign mul_ln38_5_fu_1762_p2 = ($signed(a_cache_5_load_reg_3126) * $signed(tmp_10_reg_3210));

assign mul_ln38_6_fu_1766_p2 = ($signed(a_cache_6_load_reg_3131) * $signed(tmp_11_reg_3215));

assign mul_ln38_7_fu_1816_p2 = ($signed(a_cache_7_load_reg_3136) * $signed(tmp_12_reg_3251));

assign mul_ln38_8_fu_1820_p2 = ($signed(a_cache_8_load_reg_3141) * $signed(tmp_13_reg_3256));

assign mul_ln38_9_fu_1849_p2 = ($signed(a_cache_9_load_reg_3146) * $signed(tmp_14_reg_3287));

assign mul_ln38_fu_1680_p2 = ($signed(a_cache_0_load_reg_3101) * $signed(tmp_9_reg_3164));

assign n_0_ack_in = n_0_state[1'd1];

assign n_0_load_A = (n_0_state_cmp_full & ~n_0_sel_wr);

assign n_0_load_B = (n_0_state_cmp_full & n_0_sel_wr);

assign n_0_sel = n_0_sel_rd;

assign n_0_state_cmp_full = ((n_0_state != 2'd1) ? 1'b1 : 1'b0);

assign n_0_vld_in = n_TVALID;

assign n_0_vld_out = n_0_state[1'd0];

assign n_TREADY = n_0_state[1'd1];

assign zext_ln18_fu_1456_p1 = i_0_reg_1367;

assign zext_ln20_fu_1501_p1 = j_0_reg_1378;

assign zext_ln23_fu_1465_p1 = i_0_reg_1367;

assign zext_ln28_fu_1572_p1 = i1_0_reg_1389;

assign zext_ln30_fu_1607_p1 = ap_phi_mux_j2_0_phi_fu_1404_p4;

assign zext_ln38_fu_1581_p1 = i1_0_reg_1389;

endmodule //mul
