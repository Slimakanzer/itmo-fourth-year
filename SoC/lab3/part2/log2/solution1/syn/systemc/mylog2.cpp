// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mylog2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mylog2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mylog2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<25> mylog2::ap_ST_fsm_state1 = "1";
const sc_lv<25> mylog2::ap_ST_fsm_state2 = "10";
const sc_lv<25> mylog2::ap_ST_fsm_state3 = "100";
const sc_lv<25> mylog2::ap_ST_fsm_state4 = "1000";
const sc_lv<25> mylog2::ap_ST_fsm_state5 = "10000";
const sc_lv<25> mylog2::ap_ST_fsm_state6 = "100000";
const sc_lv<25> mylog2::ap_ST_fsm_state7 = "1000000";
const sc_lv<25> mylog2::ap_ST_fsm_pp0_stage0 = "10000000";
const sc_lv<25> mylog2::ap_ST_fsm_pp0_stage1 = "100000000";
const sc_lv<25> mylog2::ap_ST_fsm_state11 = "1000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state12 = "10000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state13 = "100000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state14 = "1000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state15 = "10000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state16 = "100000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state17 = "1000000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state18 = "10000000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state19 = "100000000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state20 = "1000000000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state21 = "10000000000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state22 = "100000000000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state23 = "1000000000000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state24 = "10000000000000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state25 = "100000000000000000000000";
const sc_lv<25> mylog2::ap_ST_fsm_state26 = "1000000000000000000000000";
const sc_lv<32> mylog2::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool mylog2::ap_const_boolean_1 = true;
const int mylog2::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> mylog2::ap_const_lv32_3 = "11";
const sc_lv<32> mylog2::ap_const_lv32_4 = "100";
const sc_lv<32> mylog2::ap_const_lv32_5 = "101";
const sc_lv<1> mylog2::ap_const_lv1_1 = "1";
const sc_lv<32> mylog2::ap_const_lv32_6 = "110";
const sc_lv<1> mylog2::ap_const_lv1_0 = "0";
const sc_lv<32> mylog2::ap_const_lv32_7 = "111";
const bool mylog2::ap_const_boolean_0 = false;
const sc_lv<32> mylog2::ap_const_lv32_8 = "1000";
const sc_lv<32> mylog2::ap_const_lv32_E = "1110";
const sc_lv<32> mylog2::ap_const_lv32_12 = "10010";
const sc_lv<32> mylog2::ap_const_lv32_17 = "10111";
const sc_lv<5> mylog2::ap_const_lv5_0 = "00000";
const sc_lv<32> mylog2::ap_const_lv32_18 = "11000";
const sc_lv<32> mylog2::ap_const_lv32_13 = "10011";
const sc_lv<32> mylog2::ap_const_lv32_4A800000 = "1001010100000000000000000000000";
const sc_lv<32> mylog2::ap_const_lv32_34800000 = "110100100000000000000000000000";
const sc_lv<32> mylog2::ap_const_lv32_F = "1111";
const sc_lv<32> mylog2::ap_const_lv32_9 = "1001";
const sc_lv<32> mylog2::ap_const_lv32_D = "1101";
const sc_lv<32> mylog2::ap_const_lv32_1E = "11110";
const sc_lv<9> mylog2::ap_const_lv9_181 = "110000001";
const sc_lv<8> mylog2::ap_const_lv8_7F = "1111111";
const sc_lv<32> mylog2::ap_const_lv32_37 = "110111";
const sc_lv<32> mylog2::ap_const_lv32_16 = "10110";
const sc_lv<32> mylog2::ap_const_lv32_1F = "11111";
const sc_lv<10> mylog2::ap_const_lv10_0 = "0000000000";
const sc_lv<32> mylog2::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<9> mylog2::ap_const_lv9_0 = "000000000";
const sc_lv<32> mylog2::ap_const_lv32_1 = "1";
const sc_lv<5> mylog2::ap_const_lv5_16 = "10110";
const sc_lv<5> mylog2::ap_const_lv5_1 = "1";
const sc_lv<32> mylog2::ap_const_lv32_2D = "101101";
const sc_lv<32> mylog2::ap_const_lv32_3F = "111111";
const sc_lv<19> mylog2::ap_const_lv19_0 = "0000000000000000000";

mylog2::mylog2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mylog2_AXILiteS_s_axi_U = new mylog2_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("mylog2_AXILiteS_s_axi_U");
    mylog2_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    mylog2_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    mylog2_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    mylog2_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    mylog2_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    mylog2_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    mylog2_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    mylog2_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    mylog2_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    mylog2_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    mylog2_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    mylog2_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    mylog2_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    mylog2_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    mylog2_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    mylog2_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    mylog2_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    mylog2_AXILiteS_s_axi_U->ACLK(ap_clk);
    mylog2_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    mylog2_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    mylog2_AXILiteS_s_axi_U->ap_start(ap_start);
    mylog2_AXILiteS_s_axi_U->interrupt(interrupt);
    mylog2_AXILiteS_s_axi_U->ap_ready(ap_ready);
    mylog2_AXILiteS_s_axi_U->ap_done(ap_done);
    mylog2_AXILiteS_s_axi_U->ap_idle(ap_idle);
    mylog2_AXILiteS_s_axi_U->x(x);
    mylog2_AXILiteS_s_axi_U->y(tmp_8_reg_625);
    mylog2_AXILiteS_s_axi_U->y_ap_vld(y_ap_vld);
    mylog2_fadd_32ns_bkb_U1 = new mylog2_fadd_32ns_bkb<1,5,32,32,32>("mylog2_fadd_32ns_bkb_U1");
    mylog2_fadd_32ns_bkb_U1->clk(ap_clk);
    mylog2_fadd_32ns_bkb_U1->reset(ap_rst_n_inv);
    mylog2_fadd_32ns_bkb_U1->din0(tmp_6_reg_615);
    mylog2_fadd_32ns_bkb_U1->din1(tmp_7_reg_620);
    mylog2_fadd_32ns_bkb_U1->ce(ap_var_for_const0);
    mylog2_fadd_32ns_bkb_U1->dout(grp_fu_204_p2);
    mylog2_fmul_32ns_cud_U2 = new mylog2_fmul_32ns_cud<1,4,32,32,32>("mylog2_fmul_32ns_cud_U2");
    mylog2_fmul_32ns_cud_U2->clk(ap_clk);
    mylog2_fmul_32ns_cud_U2->reset(ap_rst_n_inv);
    mylog2_fmul_32ns_cud_U2->din0(grp_fu_208_p0);
    mylog2_fmul_32ns_cud_U2->din1(grp_fu_208_p1);
    mylog2_fmul_32ns_cud_U2->ce(ap_var_for_const0);
    mylog2_fmul_32ns_cud_U2->dout(grp_fu_208_p2);
    mylog2_uitofp_32ndEe_U3 = new mylog2_uitofp_32ndEe<1,6,32,32>("mylog2_uitofp_32ndEe_U3");
    mylog2_uitofp_32ndEe_U3->clk(ap_clk);
    mylog2_uitofp_32ndEe_U3->reset(ap_rst_n_inv);
    mylog2_uitofp_32ndEe_U3->din0(res_lo_0_reg_172);
    mylog2_uitofp_32ndEe_U3->ce(ap_var_for_const0);
    mylog2_uitofp_32ndEe_U3->dout(grp_fu_215_p1);
    mylog2_sitofp_32neOg_U4 = new mylog2_sitofp_32neOg<1,6,32,32>("mylog2_sitofp_32neOg_U4");
    mylog2_sitofp_32neOg_U4->clk(ap_clk);
    mylog2_sitofp_32neOg_U4->reset(ap_rst_n_inv);
    mylog2_sitofp_32neOg_U4->din0(res_hi_1_reg_151);
    mylog2_sitofp_32neOg_U4->ce(ap_var_for_const0);
    mylog2_sitofp_32neOg_U4->dout(grp_fu_219_p1);
    mylog2_mul_42ns_4fYi_U5 = new mylog2_mul_42ns_4fYi<1,2,42,42,64>("mylog2_mul_42ns_4fYi_U5");
    mylog2_mul_42ns_4fYi_U5->clk(ap_clk);
    mylog2_mul_42ns_4fYi_U5->reset(ap_rst_n_inv);
    mylog2_mul_42ns_4fYi_U5->din0(grp_fu_434_p0);
    mylog2_mul_42ns_4fYi_U5->din1(grp_fu_434_p1);
    mylog2_mul_42ns_4fYi_U5->ce(ap_var_for_const0);
    mylog2_mul_42ns_4fYi_U5->dout(grp_fu_434_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln339_fu_245_p2);
    sensitive << ( zext_ln339_fu_241_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage1_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state8);
    sensitive << ( icmp_ln31_fu_418_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_197_p4);
    sensitive << ( i_0_reg_193 );
    sensitive << ( icmp_ln31_reg_564 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_568 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_val_2_phi_fu_187_p4);
    sensitive << ( val_2_reg_184 );
    sensitive << ( icmp_ln31_reg_564 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( select_ln36_fu_495_p3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_grp_fu_208_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x );
    sensitive << ( tmp_4_reg_610 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_grp_fu_208_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_grp_fu_434_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln31_fu_430_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_434_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln31_fu_430_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_i_fu_424_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_197_p4 );

    SC_METHOD(thread_icmp_ln18_fu_350_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_10_fu_340_p4 );

    SC_METHOD(thread_icmp_ln24_fu_388_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_12_fu_378_p4 );

    SC_METHOD(thread_icmp_ln31_fu_418_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_197_p4 );

    SC_METHOD(thread_icmp_ln36_fu_450_p2);
    sensitive << ( icmp_ln31_reg_564 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( tmp_13_fu_440_p4 );

    SC_METHOD(thread_mantissa_V_fu_265_p4);
    sensitive << ( tmp_V_1_reg_506 );

    SC_METHOD(thread_p_Val2_s_fu_223_p1);
    sensitive << ( grp_fu_208_p2 );

    SC_METHOD(thread_r_V_1_fu_305_p2);
    sensitive << ( zext_ln682_fu_274_p1 );
    sensitive << ( zext_ln1287_fu_295_p1 );

    SC_METHOD(thread_r_V_fu_299_p2);
    sensitive << ( mantissa_V_fu_265_p4 );
    sensitive << ( sext_ln1311_2_fu_291_p1 );

    SC_METHOD(thread_res_hi_2_fu_408_p2);
    sensitive << ( res_hi_1_reg_151 );

    SC_METHOD(thread_res_hi_fu_372_p2);
    sensitive << ( res_hi_0_reg_129 );

    SC_METHOD(thread_res_lo_fu_485_p3);
    sensitive << ( trunc_ln36_reg_585 );
    sensitive << ( xor_ln36_fu_480_p2 );

    SC_METHOD(thread_select_ln36_fu_495_p3);
    sensitive << ( icmp_ln36_reg_579 );
    sensitive << ( tmp_s_reg_590 );
    sensitive << ( zext_ln36_fu_492_p1 );

    SC_METHOD(thread_sext_ln1311_1_fu_287_p1);
    sensitive << ( ush_fu_281_p3 );

    SC_METHOD(thread_sext_ln1311_2_fu_291_p1);
    sensitive << ( ush_fu_281_p3 );

    SC_METHOD(thread_sext_ln1311_fu_278_p1);
    sensitive << ( sub_ln1311_reg_522 );

    SC_METHOD(thread_sub_ln1311_fu_259_p2);
    sensitive << ( tmp_V_fu_227_p4 );

    SC_METHOD(thread_tmp_10_fu_340_p4);
    sensitive << ( val_0_reg_141 );

    SC_METHOD(thread_tmp_12_fu_378_p4);
    sensitive << ( val_1_reg_162 );

    SC_METHOD(thread_tmp_13_fu_440_p4);
    sensitive << ( grp_fu_434_p2 );

    SC_METHOD(thread_tmp_3_fu_311_p3);
    sensitive << ( r_V_fu_299_p2 );

    SC_METHOD(thread_tmp_9_fu_323_p4);
    sensitive << ( r_V_1_fu_305_p2 );

    SC_METHOD(thread_tmp_V_1_fu_237_p1);
    sensitive << ( p_Val2_s_fu_223_p1 );

    SC_METHOD(thread_tmp_V_fu_227_p4);
    sensitive << ( p_Val2_s_fu_223_p1 );

    SC_METHOD(thread_trunc_ln21_fu_356_p1);
    sensitive << ( val_0_reg_141 );

    SC_METHOD(thread_trunc_ln36_fu_456_p1);
    sensitive << ( res_lo_0_reg_172 );

    SC_METHOD(thread_ush_fu_281_p3);
    sensitive << ( add_ln339_reg_511 );
    sensitive << ( isNeg_reg_516 );
    sensitive << ( sext_ln1311_fu_278_p1 );

    SC_METHOD(thread_val_3_fu_394_p4);
    sensitive << ( val_1_reg_162 );

    SC_METHOD(thread_val_4_fu_404_p1);
    sensitive << ( val_3_fu_394_p4 );

    SC_METHOD(thread_val_V_fu_333_p3);
    sensitive << ( isNeg_reg_516 );
    sensitive << ( zext_ln662_fu_319_p1 );
    sensitive << ( tmp_9_fu_323_p4 );

    SC_METHOD(thread_val_fu_360_p3);
    sensitive << ( trunc_ln21_fu_356_p1 );

    SC_METHOD(thread_xor_ln36_fu_480_p2);
    sensitive << ( icmp_ln36_reg_579 );

    SC_METHOD(thread_y_ap_vld);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_zext_ln1287_fu_295_p1);
    sensitive << ( sext_ln1311_1_fu_287_p1 );

    SC_METHOD(thread_zext_ln21_fu_368_p1);
    sensitive << ( val_fu_360_p3 );

    SC_METHOD(thread_zext_ln31_1_fu_414_p1);
    sensitive << ( val_1_reg_162 );

    SC_METHOD(thread_zext_ln31_fu_430_p1);
    sensitive << ( ap_phi_mux_val_2_phi_fu_187_p4 );

    SC_METHOD(thread_zext_ln339_fu_241_p1);
    sensitive << ( tmp_V_fu_227_p4 );

    SC_METHOD(thread_zext_ln36_fu_492_p1);
    sensitive << ( tmp_14_reg_595 );

    SC_METHOD(thread_zext_ln662_fu_319_p1);
    sensitive << ( tmp_3_fu_311_p3 );

    SC_METHOD(thread_zext_ln682_fu_274_p1);
    sensitive << ( mantissa_V_fu_265_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln18_fu_350_p2 );
    sensitive << ( icmp_ln24_fu_388_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln31_fu_418_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mylog2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, x, "x");
    sc_trace(mVcdFile, y_ap_vld, "y_ap_vld");
    sc_trace(mVcdFile, res_lo_0_reg_172, "res_lo_0_reg_172");
    sc_trace(mVcdFile, val_2_reg_184, "val_2_reg_184");
    sc_trace(mVcdFile, i_0_reg_193, "i_0_reg_193");
    sc_trace(mVcdFile, tmp_V_1_fu_237_p1, "tmp_V_1_fu_237_p1");
    sc_trace(mVcdFile, tmp_V_1_reg_506, "tmp_V_1_reg_506");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln339_fu_245_p2, "add_ln339_fu_245_p2");
    sc_trace(mVcdFile, add_ln339_reg_511, "add_ln339_reg_511");
    sc_trace(mVcdFile, isNeg_reg_516, "isNeg_reg_516");
    sc_trace(mVcdFile, sub_ln1311_fu_259_p2, "sub_ln1311_fu_259_p2");
    sc_trace(mVcdFile, sub_ln1311_reg_522, "sub_ln1311_reg_522");
    sc_trace(mVcdFile, val_V_fu_333_p3, "val_V_fu_333_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln21_fu_368_p1, "zext_ln21_fu_368_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln18_fu_350_p2, "icmp_ln18_fu_350_p2");
    sc_trace(mVcdFile, res_hi_fu_372_p2, "res_hi_fu_372_p2");
    sc_trace(mVcdFile, icmp_ln24_fu_388_p2, "icmp_ln24_fu_388_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, val_4_fu_404_p1, "val_4_fu_404_p1");
    sc_trace(mVcdFile, res_hi_2_fu_408_p2, "res_hi_2_fu_408_p2");
    sc_trace(mVcdFile, zext_ln31_1_fu_414_p1, "zext_ln31_1_fu_414_p1");
    sc_trace(mVcdFile, icmp_ln31_fu_418_p2, "icmp_ln31_fu_418_p2");
    sc_trace(mVcdFile, icmp_ln31_reg_564, "icmp_ln31_reg_564");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter0, "ap_block_state8_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_424_p2, "i_fu_424_p2");
    sc_trace(mVcdFile, i_reg_568, "i_reg_568");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln31_fu_430_p1, "zext_ln31_fu_430_p1");
    sc_trace(mVcdFile, icmp_ln36_fu_450_p2, "icmp_ln36_fu_450_p2");
    sc_trace(mVcdFile, icmp_ln36_reg_579, "icmp_ln36_reg_579");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage1_iter0, "ap_block_state9_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, trunc_ln36_fu_456_p1, "trunc_ln36_fu_456_p1");
    sc_trace(mVcdFile, trunc_ln36_reg_585, "trunc_ln36_reg_585");
    sc_trace(mVcdFile, tmp_s_reg_590, "tmp_s_reg_590");
    sc_trace(mVcdFile, tmp_14_reg_595, "tmp_14_reg_595");
    sc_trace(mVcdFile, res_lo_fu_485_p3, "res_lo_fu_485_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, select_ln36_fu_495_p3, "select_ln36_fu_495_p3");
    sc_trace(mVcdFile, grp_fu_215_p1, "grp_fu_215_p1");
    sc_trace(mVcdFile, tmp_4_reg_610, "tmp_4_reg_610");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_fu_208_p2, "grp_fu_208_p2");
    sc_trace(mVcdFile, tmp_6_reg_615, "tmp_6_reg_615");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, grp_fu_219_p1, "grp_fu_219_p1");
    sc_trace(mVcdFile, tmp_7_reg_620, "tmp_7_reg_620");
    sc_trace(mVcdFile, grp_fu_204_p2, "grp_fu_204_p2");
    sc_trace(mVcdFile, tmp_8_reg_625, "tmp_8_reg_625");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state8, "ap_condition_pp0_exit_iter0_state8");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, res_hi_0_reg_129, "res_hi_0_reg_129");
    sc_trace(mVcdFile, val_0_reg_141, "val_0_reg_141");
    sc_trace(mVcdFile, res_hi_1_reg_151, "res_hi_1_reg_151");
    sc_trace(mVcdFile, val_1_reg_162, "val_1_reg_162");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_val_2_phi_fu_187_p4, "ap_phi_mux_val_2_phi_fu_187_p4");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_197_p4, "ap_phi_mux_i_0_phi_fu_197_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, grp_fu_208_p0, "grp_fu_208_p0");
    sc_trace(mVcdFile, grp_fu_208_p1, "grp_fu_208_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, p_Val2_s_fu_223_p1, "p_Val2_s_fu_223_p1");
    sc_trace(mVcdFile, tmp_V_fu_227_p4, "tmp_V_fu_227_p4");
    sc_trace(mVcdFile, zext_ln339_fu_241_p1, "zext_ln339_fu_241_p1");
    sc_trace(mVcdFile, mantissa_V_fu_265_p4, "mantissa_V_fu_265_p4");
    sc_trace(mVcdFile, sext_ln1311_fu_278_p1, "sext_ln1311_fu_278_p1");
    sc_trace(mVcdFile, ush_fu_281_p3, "ush_fu_281_p3");
    sc_trace(mVcdFile, sext_ln1311_1_fu_287_p1, "sext_ln1311_1_fu_287_p1");
    sc_trace(mVcdFile, sext_ln1311_2_fu_291_p1, "sext_ln1311_2_fu_291_p1");
    sc_trace(mVcdFile, zext_ln682_fu_274_p1, "zext_ln682_fu_274_p1");
    sc_trace(mVcdFile, zext_ln1287_fu_295_p1, "zext_ln1287_fu_295_p1");
    sc_trace(mVcdFile, r_V_fu_299_p2, "r_V_fu_299_p2");
    sc_trace(mVcdFile, tmp_3_fu_311_p3, "tmp_3_fu_311_p3");
    sc_trace(mVcdFile, r_V_1_fu_305_p2, "r_V_1_fu_305_p2");
    sc_trace(mVcdFile, zext_ln662_fu_319_p1, "zext_ln662_fu_319_p1");
    sc_trace(mVcdFile, tmp_9_fu_323_p4, "tmp_9_fu_323_p4");
    sc_trace(mVcdFile, tmp_10_fu_340_p4, "tmp_10_fu_340_p4");
    sc_trace(mVcdFile, trunc_ln21_fu_356_p1, "trunc_ln21_fu_356_p1");
    sc_trace(mVcdFile, val_fu_360_p3, "val_fu_360_p3");
    sc_trace(mVcdFile, tmp_12_fu_378_p4, "tmp_12_fu_378_p4");
    sc_trace(mVcdFile, val_3_fu_394_p4, "val_3_fu_394_p4");
    sc_trace(mVcdFile, grp_fu_434_p0, "grp_fu_434_p0");
    sc_trace(mVcdFile, grp_fu_434_p1, "grp_fu_434_p1");
    sc_trace(mVcdFile, grp_fu_434_p2, "grp_fu_434_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_13_fu_440_p4, "tmp_13_fu_440_p4");
    sc_trace(mVcdFile, xor_ln36_fu_480_p2, "xor_ln36_fu_480_p2");
    sc_trace(mVcdFile, zext_ln36_fu_492_p1, "zext_ln36_fu_492_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("mylog2.hdltvin.dat");
    mHdltvoutHandle.open("mylog2.hdltvout.dat");
}

mylog2::~mylog2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete mylog2_AXILiteS_s_axi_U;
    delete mylog2_fadd_32ns_bkb_U1;
    delete mylog2_fmul_32ns_cud_U2;
    delete mylog2_uitofp_32ndEe_U3;
    delete mylog2_sitofp_32neOg_U4;
    delete mylog2_mul_42ns_4fYi_U5;
}

void mylog2::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mylog2::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state8.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_388_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_388_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_388_p2.read()))) {
        i_0_reg_193 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_564.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_193 = i_reg_568.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln18_fu_350_p2.read(), ap_const_lv1_1))) {
        res_hi_0_reg_129 = res_hi_fu_372_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        res_hi_0_reg_129 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln18_fu_350_p2.read(), ap_const_lv1_0))) {
        res_hi_1_reg_151 = res_hi_0_reg_129.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(icmp_ln24_fu_388_p2.read(), ap_const_lv1_0))) {
        res_hi_1_reg_151 = res_hi_2_fu_408_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_388_p2.read()))) {
        res_lo_0_reg_172 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_564.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        res_lo_0_reg_172 = res_lo_fu_485_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln18_fu_350_p2.read(), ap_const_lv1_1))) {
        val_0_reg_141 = zext_ln21_fu_368_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        val_0_reg_141 = val_V_fu_333_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln18_fu_350_p2.read(), ap_const_lv1_0))) {
        val_1_reg_162 = val_0_reg_141.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(icmp_ln24_fu_388_p2.read(), ap_const_lv1_0))) {
        val_1_reg_162 = val_4_fu_404_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_388_p2.read()))) {
        val_2_reg_184 = zext_ln31_1_fu_414_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_564.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        val_2_reg_184 = select_ln36_fu_495_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln339_reg_511 = add_ln339_fu_245_p2.read();
        isNeg_reg_516 = add_ln339_fu_245_p2.read().range(8, 8);
        sub_ln1311_reg_522 = sub_ln1311_fu_259_p2.read();
        tmp_V_1_reg_506 = tmp_V_1_fu_237_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_568 = i_fu_424_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln31_reg_564 = icmp_ln31_fu_418_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_564.read()))) {
        icmp_ln36_reg_579 = icmp_ln36_fu_450_p2.read();
        tmp_14_reg_595 = grp_fu_434_p2.read().range(63, 23);
        tmp_s_reg_590 = grp_fu_434_p2.read().range(63, 22);
        trunc_ln36_reg_585 = trunc_ln36_fu_456_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_4_reg_610 = grp_fu_215_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        tmp_6_reg_615 = grp_fu_208_p2.read();
        tmp_7_reg_620 = grp_fu_219_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        tmp_8_reg_625 = grp_fu_204_p2.read();
    }
}

void mylog2::thread_add_ln339_fu_245_p2() {
    add_ln339_fu_245_p2 = (!ap_const_lv9_181.is_01() || !zext_ln339_fu_241_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(zext_ln339_fu_241_p1.read()));
}

void mylog2::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[7];
}

void mylog2::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[8];
}

void mylog2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mylog2::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[9];
}

void mylog2::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[13];
}

void mylog2::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[14];
}

void mylog2::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[15];
}

void mylog2::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[18];
}

void mylog2::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[19];
}

void mylog2::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[23];
}

void mylog2::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[24];
}

void mylog2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mylog2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mylog2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mylog2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void mylog2::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mylog2::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mylog2::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mylog2::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mylog2::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mylog2::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mylog2::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mylog2::thread_ap_block_state8_pp0_stage0_iter0() {
    ap_block_state8_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mylog2::thread_ap_block_state9_pp0_stage1_iter0() {
    ap_block_state9_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void mylog2::thread_ap_condition_pp0_exit_iter0_state8() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_418_p2.read())) {
        ap_condition_pp0_exit_iter0_state8 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state8 = ap_const_logic_0;
    }
}

void mylog2::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mylog2::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void mylog2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mylog2::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void mylog2::thread_ap_phi_mux_i_0_phi_fu_197_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_564.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_197_p4 = i_reg_568.read();
    } else {
        ap_phi_mux_i_0_phi_fu_197_p4 = i_0_reg_193.read();
    }
}

void mylog2::thread_ap_phi_mux_val_2_phi_fu_187_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_reg_564.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_val_2_phi_fu_187_p4 = select_ln36_fu_495_p3.read();
    } else {
        ap_phi_mux_val_2_phi_fu_187_p4 = val_2_reg_184.read();
    }
}

void mylog2::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mylog2::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void mylog2::thread_grp_fu_208_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_208_p0 = tmp_4_reg_610.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_208_p0 = x.read();
    } else {
        grp_fu_208_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mylog2::thread_grp_fu_208_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_208_p1 = ap_const_lv32_34800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_208_p1 = ap_const_lv32_4A800000;
    } else {
        grp_fu_208_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mylog2::thread_grp_fu_434_p0() {
    grp_fu_434_p0 =  (sc_lv<42>) (zext_ln31_fu_430_p1.read());
}

void mylog2::thread_grp_fu_434_p1() {
    grp_fu_434_p1 =  (sc_lv<42>) (zext_ln31_fu_430_p1.read());
}

void mylog2::thread_i_fu_424_p2() {
    i_fu_424_p2 = (!ap_phi_mux_i_0_phi_fu_197_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_i_0_phi_fu_197_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void mylog2::thread_icmp_ln18_fu_350_p2() {
    icmp_ln18_fu_350_p2 = (!tmp_10_fu_340_p4.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_10_fu_340_p4.read() == ap_const_lv10_0);
}

void mylog2::thread_icmp_ln24_fu_388_p2() {
    icmp_ln24_fu_388_p2 = (!tmp_12_fu_378_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_fu_378_p4.read() == ap_const_lv9_0);
}

void mylog2::thread_icmp_ln31_fu_418_p2() {
    icmp_ln31_fu_418_p2 = (!ap_phi_mux_i_0_phi_fu_197_p4.read().is_01() || !ap_const_lv5_16.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_197_p4.read() == ap_const_lv5_16);
}

void mylog2::thread_icmp_ln36_fu_450_p2() {
    icmp_ln36_fu_450_p2 = (!tmp_13_fu_440_p4.read().is_01() || !ap_const_lv19_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_fu_440_p4.read() == ap_const_lv19_0);
}

void mylog2::thread_mantissa_V_fu_265_p4() {
    mantissa_V_fu_265_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, tmp_V_1_reg_506.read()), ap_const_lv1_0);
}

void mylog2::thread_p_Val2_s_fu_223_p1() {
    p_Val2_s_fu_223_p1 = grp_fu_208_p2.read();
}

void mylog2::thread_r_V_1_fu_305_p2() {
    r_V_1_fu_305_p2 = (!zext_ln1287_fu_295_p1.read().is_01())? sc_lv<79>(): zext_ln682_fu_274_p1.read() << (unsigned short)zext_ln1287_fu_295_p1.read().to_uint();
}

void mylog2::thread_r_V_fu_299_p2() {
    r_V_fu_299_p2 = (!sext_ln1311_2_fu_291_p1.read().is_01())? sc_lv<25>(): mantissa_V_fu_265_p4.read() >> (unsigned short)sext_ln1311_2_fu_291_p1.read().to_uint();
}

void mylog2::thread_res_hi_2_fu_408_p2() {
    res_hi_2_fu_408_p2 = (!res_hi_1_reg_151.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(res_hi_1_reg_151.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void mylog2::thread_res_hi_fu_372_p2() {
    res_hi_fu_372_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !res_hi_0_reg_129.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(res_hi_0_reg_129.read()));
}

void mylog2::thread_res_lo_fu_485_p3() {
    res_lo_fu_485_p3 = esl_concat<31,1>(trunc_ln36_reg_585.read(), xor_ln36_fu_480_p2.read());
}

void mylog2::thread_select_ln36_fu_495_p3() {
    select_ln36_fu_495_p3 = (!icmp_ln36_reg_579.read()[0].is_01())? sc_lv<42>(): ((icmp_ln36_reg_579.read()[0].to_bool())? tmp_s_reg_590.read(): zext_ln36_fu_492_p1.read());
}

void mylog2::thread_sext_ln1311_1_fu_287_p1() {
    sext_ln1311_1_fu_287_p1 = esl_sext<32,9>(ush_fu_281_p3.read());
}

void mylog2::thread_sext_ln1311_2_fu_291_p1() {
    sext_ln1311_2_fu_291_p1 = esl_sext<25,9>(ush_fu_281_p3.read());
}

void mylog2::thread_sext_ln1311_fu_278_p1() {
    sext_ln1311_fu_278_p1 = esl_sext<9,8>(sub_ln1311_reg_522.read());
}

void mylog2::thread_sub_ln1311_fu_259_p2() {
    sub_ln1311_fu_259_p2 = (!ap_const_lv8_7F.is_01() || !tmp_V_fu_227_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_V_fu_227_p4.read()));
}

void mylog2::thread_tmp_10_fu_340_p4() {
    tmp_10_fu_340_p4 = val_0_reg_141.read().range(31, 22);
}

void mylog2::thread_tmp_12_fu_378_p4() {
    tmp_12_fu_378_p4 = val_1_reg_162.read().range(31, 23);
}

void mylog2::thread_tmp_13_fu_440_p4() {
    tmp_13_fu_440_p4 = grp_fu_434_p2.read().range(63, 45);
}

void mylog2::thread_tmp_3_fu_311_p3() {
    tmp_3_fu_311_p3 = r_V_fu_299_p2.read().range(24, 24);
}

void mylog2::thread_tmp_9_fu_323_p4() {
    tmp_9_fu_323_p4 = r_V_1_fu_305_p2.read().range(55, 24);
}

void mylog2::thread_tmp_V_1_fu_237_p1() {
    tmp_V_1_fu_237_p1 = p_Val2_s_fu_223_p1.read().range(23-1, 0);
}

void mylog2::thread_tmp_V_fu_227_p4() {
    tmp_V_fu_227_p4 = p_Val2_s_fu_223_p1.read().range(30, 23);
}

void mylog2::thread_trunc_ln21_fu_356_p1() {
    trunc_ln21_fu_356_p1 = val_0_reg_141.read().range(22-1, 0);
}

void mylog2::thread_trunc_ln36_fu_456_p1() {
    trunc_ln36_fu_456_p1 = res_lo_0_reg_172.read().range(31-1, 0);
}

void mylog2::thread_ush_fu_281_p3() {
    ush_fu_281_p3 = (!isNeg_reg_516.read()[0].is_01())? sc_lv<9>(): ((isNeg_reg_516.read()[0].to_bool())? sext_ln1311_fu_278_p1.read(): add_ln339_reg_511.read());
}

void mylog2::thread_val_3_fu_394_p4() {
    val_3_fu_394_p4 = val_1_reg_162.read().range(31, 1);
}

void mylog2::thread_val_4_fu_404_p1() {
    val_4_fu_404_p1 = esl_zext<32,31>(val_3_fu_394_p4.read());
}

void mylog2::thread_val_V_fu_333_p3() {
    val_V_fu_333_p3 = (!isNeg_reg_516.read()[0].is_01())? sc_lv<32>(): ((isNeg_reg_516.read()[0].to_bool())? zext_ln662_fu_319_p1.read(): tmp_9_fu_323_p4.read());
}

void mylog2::thread_val_fu_360_p3() {
    val_fu_360_p3 = esl_concat<22,1>(trunc_ln21_fu_356_p1.read(), ap_const_lv1_0);
}

void mylog2::thread_xor_ln36_fu_480_p2() {
    xor_ln36_fu_480_p2 = (icmp_ln36_reg_579.read() ^ ap_const_lv1_1);
}

void mylog2::thread_y_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        y_ap_vld = ap_const_logic_1;
    } else {
        y_ap_vld = ap_const_logic_0;
    }
}

void mylog2::thread_zext_ln1287_fu_295_p1() {
    zext_ln1287_fu_295_p1 = esl_zext<79,32>(sext_ln1311_1_fu_287_p1.read());
}

void mylog2::thread_zext_ln21_fu_368_p1() {
    zext_ln21_fu_368_p1 = esl_zext<32,23>(val_fu_360_p3.read());
}

void mylog2::thread_zext_ln31_1_fu_414_p1() {
    zext_ln31_1_fu_414_p1 = esl_zext<42,32>(val_1_reg_162.read());
}

void mylog2::thread_zext_ln31_fu_430_p1() {
    zext_ln31_fu_430_p1 = esl_zext<64,42>(ap_phi_mux_val_2_phi_fu_187_p4.read());
}

void mylog2::thread_zext_ln339_fu_241_p1() {
    zext_ln339_fu_241_p1 = esl_zext<9,8>(tmp_V_fu_227_p4.read());
}

void mylog2::thread_zext_ln36_fu_492_p1() {
    zext_ln36_fu_492_p1 = esl_zext<42,41>(tmp_14_reg_595.read());
}

void mylog2::thread_zext_ln662_fu_319_p1() {
    zext_ln662_fu_319_p1 = esl_zext<32,1>(tmp_3_fu_311_p3.read());
}

void mylog2::thread_zext_ln682_fu_274_p1() {
    zext_ln682_fu_274_p1 = esl_zext<79,25>(mantissa_V_fu_265_p4.read());
}

void mylog2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln18_fu_350_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_388_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_418_p2.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln31_fu_418_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<25>) ("XXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void mylog2::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

